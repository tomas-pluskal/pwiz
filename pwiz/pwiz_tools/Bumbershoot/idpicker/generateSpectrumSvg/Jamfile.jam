# Usage:
#
#   bjam [options] [install]
#
#   Builds and installs all Bumbershoot applications.
#
# Targets and Related Options:
#
#   build                   Build Bumbershoot libraries and applications
#   =====
#
#   --libmsr-src=<DIR>      Find LibMSR source distribution here.
#                           Default: "ext/src/libmsr*"
#
#   --expat-src=<DIR>       Find Expat 2.0+ source distribution here.
#                           Default: "ext/src/expat*"
#
#   --zlib-src=<DIR>        Find Zlib source distribution here.
#                           Default: "ext/src/zlib*"
#
#   --boost-src=<DIR>       Find root of Boost source distribution here.
#                           Default: BOOST_ROOT environment variable
#
#   mfc=<on|off>            For LibMSR-dependent applications on Windows,
#                           enable or disable support for certain vendor-
#                           proprietary spectra formats:
#                              * Thermo .RAW (Xcalibur)
#                              * ABI .WIFF (Analyst or AnalystQS)
#                           This support will only work at run-time if the
#                           host machine has access to the necessary vendor-
#                           proprietary libraries (in parentheses above).
#                           Default: on
#
#
#   install                 Install executable files to certain locations
#   =======
#
#   --prefix=<PREFIX>       Install architecture independent files here.
#                           Default: "C:\Program Files\Bumbershoot" for Windows
#                           Default: "/usr/local/bumbershoot" for Linux
#
#   --exec-prefix=<EPREFIX> Install architecture dependent files here.
#                           Default: <PREFIX>
#

import package ;
import errors : error ;

local .boost-build-file = [ modules.peek : .boost-build-file ] ;
tmp = [ modules.peek : BOOST_BUILD_PATH ] ;
tmp += $(.boost-build-file:D)/ext ;
modules.poke : BOOST_BUILD_PATH : $(tmp) ;

exe generateSpectrumSvg
 : [ glob *.cpp ] [ glob *.h ] /freicore/<link>static
 :
 : <variant>release <link>static
 ;

local install-requirements = <install-dependencies>off ;

if [ modules.peek : NT ]
{
    install-requirements += <install-default-prefix>"C:/Program Files/GenerateSpectrumSVG" ;
}
else if [ modules.peek : UNIX ]
{
    install-requirements += <install-default-prefix>/usr/local ;
}

package.install install
    : $(install-requirements) release
    : generateSpectrumSvg
    : # no libraries
    : # no headers
    ;
explicit install ;