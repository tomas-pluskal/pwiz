#
# $Id: Jamfile.jam $
#
#
# Original author: Barbara Frewen <frewen .@. u.washington.edu>
#
# Copyright 2012 University of Washington - Seattle, WA 98195
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
# 

import common ;
import notfile ;
import path ;

# extract the input files for the tests
path-constant TEST_DATA_PATH : ./inputs ;

rule test-data
{
    # decompress test data if available (on any platform)
    if ! $(.extract-once) && [ path.exists $(TEST_DATA_PATH).tar.bz2 ]
    {
        .extract-once = true ;
        import tar ;
        tar.extract $(TEST_DATA_PATH).tar.bz2 : : : : check-last-file-only ;
    }

    local result ;
    if ! $(.warn-once-test)
    {
        .warn-once-test = true ;
        if ! [ path.exists $(TEST_DATA_PATH) ]
        {
            echo "[pwiz_tools/BiblioSpec] Missing test data." ;
            result = <build>no ;
        }
    }
    return $(result) ;
}

.os = [ modules.peek : OS ] ; # NT, LINUX, MACOSX

local compare-reqs = <include>../libraries/sqlite <include>../src/ ; 
alias compare-src : ../libraries/sqlite//sqlite ;

rule msparser-installed ( properties * )
{
    local result ;
    local msparser_path = [ msparser-path $(properties) ] ;
    if ! $(msparser_path)
    {
        result = <build>no ;
    }

    return $(result) ;
}

rule blib-test ( name : tool : args * : output-name : reference-names + : inputs * : requirements * )
{
    local output = output/$(output-name).blib ;
    local references = reference/$(reference-names) ;
    return [ make $(output) : inputs/empty : @common.copy : <location>. <conditional>@test-data $(requirements) ]
           [ run-if-exists ExecuteBlib.cpp : $(args) : [ SORT $(tool) $(inputs) $(output) ] : $(requirements) <dependency>$(output) : build-$(name) ]
           [ run-if-exists CompareLibraryContents.cpp compare-src : : [ SORT $(output) $(references) ]
                           : $(compare-reqs) <dependency>build-$(name) $(requirements) : check-$(name) ] ;
}

# Test building with sqt files

blib-test sqt-ms2 : ../src//BlibBuild : -o : demo : sqt-ms2.check : inputs/demo.sqt ;
blib-test sqt-cms2 : ../src//BlibBuild : -o : demo-copy : sqt-cms2.check : inputs/demo-copy.sqt ;
blib-test sqt-ez : ../src//BlibBuild : -o : sqt-ez : sqt-ez.check : inputs/wormy4raw-1.select.sqt ;

# Test with the tab-delimited input format

blib-test ssl : ../src//BlibBuild : -o : ssl : ssl.check : inputs/demo.ssl ;
blib-test ssl-ex : ../src//BlibBuild : -o : ssl-ex : ssl-ex.check : inputs/extra-cols.ssl ;
blib-test duplicates : ../src//BlibBuild : -o : duplicates : duplicates.check : inputs/three-duplicates.ssl ;

# Test building with percolator XML files

blib-test perc-xml : ../src//BlibBuild : -o : perc : perc-xml.check : inputs/smaller.perc.xml ;

# Test building with .pep.xml from various pipelines

blib-test omssa : ../src//BlibBuild : -o : omssa : omssa.check : inputs/OMSSA.pep.xml ;
blib-test pep-proph : ../src//BlibBuild : -o : pep-proph : pep-proph.check : inputs/CAexample.pep.xml ;
blib-test prospector : ../src//BlibBuild : -o : prospector : prospector.check zbuild.skip-lines : inputs/V20120113-01_ITMSms2cid.pep.xml ;
blib-test smill : ../src//BlibBuild : -o : smill : smill.check : inputs/CPTAC_Set4_725_091509.pep.XML ;
blib-test bad-index : ../src//BlibBuild : -o : bad-index : bad-index.check : inputs/interact-prob-three-spec.pep.xml ;

# Test other xml formats (idpicker, xtandem)

blib-test idpicker : ../src//BlibBuild : -o : idpicker : idpicker.check : inputs/orbi-small-eg.idpXML ;
blib-test tandem : ../src//BlibBuild : -o : tandem : tandem.check zbuild.skip-lines : inputs/out_260_1_step01.2009_09_02_10_55_23.xtan.xml ;
blib-test pilot : ../src//BlibBuild : -o : pilot : pilot.check : inputs/MB1_98_03.group.xml ;

# Test mzid format from scaffold

blib-test scaffold : ../src//BlibBuild : -o : scaffold : scaffold.check : inputs/scaffold.mzid ;

# Test waters csv format

blib-test mse : ../src//BlibBuild : -o : mse : mse.check : inputs/tiny_final_fragment.csv ;

# Test building with Mascot .dat files, contingent on Mascot support

blib-test mascot : ../src//BlibBuild : -o : mascot : mascot.check : inputs/F027319.dat : <conditional>@msparser-installed ;
blib-test mascot-15N : ../src//BlibBuild : -o : mascot-15N : mascot-15N.check : inputs/F027752.dat : <conditional>@msparser-installed ;

# Test merging existing libraries

blib-test merge : ../src//BlibBuild : -o : xmerged.redundant : xmerged.redundant.check : output/demo-copy.blib output/demo.blib output/pep-proph.blib output/xmerged.redundant.blib ;

# Test BlibFilter

#make output/zmerged.filtered.blib : inputs/empty : @common.copy : <location>. ;
#run-if-exists ExecuteBlib.cpp : : ../src//BlibFilter output/xmerged.redundant.blib output/zmerged.filtered.blib : 
#  : build-filter ;
#run-if-exists CompareLibraryContents.cpp compare-src : 
#  : output/zmerged.filtered.blib reference/zmerged.filtered.check : $(compare-reqs)
#  : check-filter ;

#make output/filtered.existing.blib : inputs/empty : @common.copy : <location>. ;
#run-if-exists ExecuteBlib.cpp : : ../src//BlibFilter inputs/existing.blib output/filtered.existing.blib : 
#  : build-filter-old ;
#run-if-exists CompareLibraryContents.cpp compare-src : 
#  : output/filtered.existing.blib reference/filtered.existing.check : $(compare-reqs)
#  : check-filter-old ;

# Test adding spectra to existing libraries, new and old formats

# TODO: these tests are broken
# requires a clean copy of inputs/existing.blib to output/z.old.blib before running
#make output/z.old.blib : inputs/existing.blib : @common.copy : $(test_output_req) ;
#run-if-exists ExecuteBlib.cpp :  
#  : ../src//BlibBuild inputs/CPTAC_Set4_725_091509.pep.XML inputs/old-demo.blib output/sqt-ez.blib output/z.old.blib : 
#  : build-into-old ;
#run-if-exists CompareLibraryContents.cpp compare-src : : output/z.old.blib reference/old.check : $(compare-reqs)
#  : check-old ;

#make output/z.new.blib : output/scaffold.blib : @common.copy : $(test_output_req) ;
#run-if-exists ExecuteBlib.cpp : 
#  : ../src//BlibBuild inputs/CPTAC_Set4_725_091509.pep.XML inputs/old-demo.blib output/sqt-ez.blib output/z.new.blib : 
#  : build-into-new ;
#run-if-exists CompareLibraryContents.cpp compare-src : : output/z.new.blib reference/new.check : $(compare-reqs)
#  : check-new ;

#make output/z.mixed.blib : inputs/empty : @common.copy : $(test_output_req) ;
#run-if-exists ExecuteBlib.cpp : -o : ../src//BlibBuild inputs/existing.blib output/scaffold.blib output/z.mixed.blib : 
#  : build-mixed ;
#run-if-exists CompareLibraryContents.cpp compare-src : : output/z.mixed.blib reference/mixed.check : $(compare-reqs)
#  : check-mixed ;

# Test conversion to text

make output/demo.lms2 : inputs/empty : @common.copy : $(test_output_req) ;
run-if-exists ExecuteBlib.cpp
  : -f
  : ../src//BlibToMs2 output/demo.blib output/demo.lms2
  : <dependency>build-sqt-ms2 
  : convert-lms2 ;
run-if-exists CompareTextFiles.cpp
  :
  : output/demo.lms2 reference/demo.lms2 reference/lms2-skip-lines
  : <dependency>convert-lms2
  : check-lms2 ;

# Test BlibSearch

make inputs/demo.report : inputs/empty : @common.copy : $(test_output_req) ;
run-if-exists ExecuteBlib.cpp
  : --preserve-order
  : ../src//BlibSearch inputs/demo.ms2 output/demo.blib
  : <dependency>build-sqt-ms2
  : search-demo ;
run-if-exists CompareTextFiles.cpp
  :
  : inputs/demo.report reference/demo.report reference/demo.skip-lines
  : <dependency>search-demo
  : check-search-demo ;

make inputs/demo.decoy.report : inputs/empty : @common.copy : $(test_output_req) ;
run-if-exists ExecuteBlib.cpp
  : --preserve-order --decoys-per-target_1
  : ../src//BlibSearch inputs/demo.ms2 output/demo.blib
  : <dependency>build-sqt-ms2
  : search-decoy ;
run-if-exists CompareTextFiles.cpp
  :
  : inputs/demo.decoy.report reference/demo.decoy.report reference/demo.skip-lines
  : <dependency>search-decoy
  : check-search-decoy ;

make inputs/mzsorted.report : inputs/empty : @common.copy : $(test_output_req) ;
run-if-exists ExecuteBlib.cpp
  :
  : ../src//BlibSearch inputs/mzsorted.ms2 output/demo.blib
  : <dependency>build-sqt-ms2
  : search-mzsorted ;
run-if-exists CompareTextFiles.cpp
  :
  : inputs/mzsorted.report reference/mzsorted.report reference/mzsorted.skip-lines
  : <dependency>search-mzsorted
  : check-search-mzsorted ;

make inputs/binning.report : inputs/empty : @common.copy : $(test_output_req) ;
run-if-exists ExecuteBlib.cpp
  : --bin-size_1.1 --bin-offset_0.2
  : ../src//BlibSearch inputs/binning.ms2 output/demo.blib
  : <dependency>build-sqt-ms2
 : search-binning ;
run-if-exists CompareTextFiles.cpp
  :
  : inputs/binning.report reference/binning.report reference/demo.skip-lines
  : <dependency>search-binning
  : check-search-binning ;



