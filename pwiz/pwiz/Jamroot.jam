#
# Jamroot (pwiz) 
#
#
# Original author: Darren Kessner <Darren.Kessner@cshs.org>
#
# Copyright 2008 Spielberg Family Center for Applied Proteomics
#   Cedars-Sinai Medical Center, Los Angeles, California  90048
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
#


import testing ; # needed to enable unit-test rule

path-constant PWIZ_ROOT_PATH : . ;

project pwiz 
    : requirements 
        <include>.
        <include>../libraries/boost_1_34_1
        <include>../libraries/zlib-1.2.3

        #<warnings-as-errors>on
        <warnings>all

        <toolset>gcc,<link>shared:<runtime-link>shared

        # special msvc hacks
        <toolset>msvc:<define>WIN32                     # windows
        <toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE  # don't deprecate the standard library 
        <toolset>msvc:<define>_SCL_SECURE_NO_DEPRECATE  # don't deprecate the standard library 
        <toolset>msvc:<define>_SECURE_SCL_THROWS=1      # checked iterators throw instead of crash  
        <toolset>msvc:<define>_USE_MATH_DEFINES         # for M_PI in <cmath>
        <toolset>msvc:<cxxflags>/wd4100                 # warning: unreferenced formal parameter
        <toolset>msvc:<cxxflags>/wd4512                 # warning: assignment operator could not be generated
        <toolset>msvc:<cxxflags>/wd4127                 # warning: conditional expression is constant (boost::lexical_cast)
        <toolset>msvc:<cxxflags>/wd4701                 # warning: potentially uninitialized local variable 'result' used (boost::lexical_cast, debug)
        <toolset>msvc:<cxxflags>/wd4245                 # warning: conversion from 'type1' to 'type2', signed/unsigned mismatch (boost/filesystem/convenience.hpp)
        <toolset>msvc:<cxxflags>/wd4251                 # warning: class needs to have dll-interface to be used by clients of class
        <toolset>msvc:<cxxflags>/wd4267	                # warning: conversion from 'type1' to 'type2', possible loss of data (boost::lexical_cast)

        # special gcc hack - Cygwin gcc 3.4.4, Ubuntu gcc 4.1.2 
        # warning: '__cur' might be used uninitialized in this function 
        <toolset>gcc:<cxxflags>-Wno-uninitialized   

        # special Cygwin gcc-3.4.4 hack
        # linker "multiple definition" error on inclusion of boost-1.34.1 filesystem headers  
        <toolset>gcc-3.4.4:<linkflags>-Wl,--allow-multiple-definition
        <toolset>gcc-mingw-3.4.5:<linkflags>-Wl,--allow-multiple-definition

        # allow "long long" even with -pedantic
        <toolset>gcc:<cxxflags>-Wno-long-long
        <toolset>darwin:<cxxflags>-Wno-long-long

        # don't call 'strip' -- causes 'Bus error' in some cases
        #  e.g. find_if with inline predicate
        <toolset>darwin:<debug-symbols>on

    : build-dir ../build
    : usage-requirements
        <include>.
    : default-build
        release
        <link>static
        <runtime-link>static
    ;


# external library declarations

lib pthread : : <name>pthread <link>shared ;
lib jpeg png z ;
lib gd : jpeg png z : <name>gd ;
lib gd : : <toolset>msvc <name>bgd <search>../libraries : : <include>../libraries/gd-2.0.33 ;

lib fftw3 ;
lib fftw3 : : <toolset>msvc <name>libfftw3-3 <search>../libraries : : <include>../libraries/fftw-3.1.2/api ;

local .boost-build-file = [ modules.peek : .boost-build-file ] ;
tmp = [ modules.peek : BOOST_BUILD_PATH ] ;
tmp += $(PWIZ_ROOT_PATH) $(PWIZ_ROOT_PATH)/../libraries ;
modules.poke : BOOST_BUILD_PATH : $(tmp) ;

path-constant ZLIB_SOURCE : ../libraries/zlib-1.2.3 ;
path-constant BOOST_SOURCE : ../libraries/boost_1_34_1 ;

using zlib : 1.2.3 : $(ZLIB_SOURCE) ;
using boost : 1.34.1 : $(BOOST_SOURCE) ;
