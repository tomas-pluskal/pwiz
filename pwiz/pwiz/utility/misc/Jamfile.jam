#
# Jamfile (utility/misc) 
#
#
# Original author: Darren Kessner <Darren.Kessner@cshs.org>
#
# Copyright 2008 Spielberg Family Center for Applied Proteomics
#   Cedars-Sinai Medical Center, Los Angeles, California  90048
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
#


project 
    : requirements 
        # hacks to allow building with <warnings>all with MSVC and boost
        <toolset>msvc:<cxxflags>/wd4702 # warning: unreachable code # (boost/numeric/ublas/lu.hpp)
        <toolset>msvc,<link>shared:<define>PWIZ_DYN_LINK
;


lib ole32 : : <name>ole32 ; # for CoInitialize/CoUninitialize


lib pwiz_utility_misc
    : # sources
        Base64.cpp 
        IntegerSet.cpp
        IterationListener.cpp
        Filesystem.cpp
        random_access_compressed_ifstream.cpp
        SHA1Calculator.cpp
        SHA1.cpp
    : # requirements
        <warnings>all
        <toolset>msvc:<source>COMInitializer.cpp
        <toolset>msvc:<library>ole32
        <toolset>msvc:<library>/ext/boost//thread
        <library>/ext/boost//filesystem
        <library>/ext/zlib//z
    : # default-build
    : # usage-requirements
        <toolset>msvc:<library>/ext/boost//thread
        <library>/ext/boost//filesystem
        <library>/ext/zlib//z
        <toolset>msvc:<library>ole32
    ;


lib pwiz_utility_image
    : # sources
        Image.cpp
    : # requirements
        <warnings>all
        <library>../../..//gd
        <library>pwiz_utility_misc
    : # default-build
    : # usage-requirements
        <library>../../..//gd
        <library>pwiz_utility_misc
    ;


unit-test endian_test : endian_test.cpp ;
unit-test Base64Test : Base64Test.cpp pwiz_utility_misc ;
unit-test IntegerSetTest : IntegerSetTest.cpp pwiz_utility_misc ;
unit-test IterationListenerTest : IterationListenerTest.cpp pwiz_utility_misc ;
unit-test FilesystemTest : FilesystemTest.cpp pwiz_utility_misc ;
unit-test SHA1CalculatorTest : SHA1CalculatorTest.cpp pwiz_utility_misc ; 
unit-test SHA1_ostream_test : SHA1_ostream_test.cpp pwiz_utility_misc ;

import modules ;
if [ modules.peek : NT ]
{
    unit-test COMInitializerTest : COMInitializerTest.cpp pwiz_utility_misc ;
}

exe sha1calc : sha1calc.cpp pwiz_utility_misc ;
install bin : sha1calc : <location>. ;
explicit bin ;

