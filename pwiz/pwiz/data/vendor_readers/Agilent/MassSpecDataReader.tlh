// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (d898beac).
//
// c:\bumbershoot\src\pwiz-src\build\pwiz\data\vendor_readers\agilent\msvc-9.0\release\link-static\threading-multi\massspecdatareader.tlh
//
// C++ source equivalent of Win32 type library MassSpecDataReader.tlb
// compiler-generated file created 05/19/09 at 10:02:20 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace MSDR {

//
// Forward references and typedefs
//

struct __declspec(uuid("18a9d1d8-42bc-4a5d-ad59-590f4049a5b5"))
/* LIBID */ __MassSpecDataReader;
struct __declspec(uuid("da2b5d36-f15c-4484-9496-b0415cfe0c59"))
/* dual interface */ IMsdrDataReader;
struct __declspec(uuid("a4d3c36a-d665-4a86-ab33-1f3228cdcfbd"))
/* dual interface */ INonmsDataReader;
struct /* coclass */ MassSpecDataReader;
struct __declspec(uuid("0cce0b75-9cf9-4d6f-9d67-b35ccd7986ac"))
/* dual interface */ IDeviceInfo;
struct /* coclass */ DeviceInfo;
struct __declspec(uuid("6c227a08-da76-4818-8711-0205abb14875"))
/* dual interface */ ISignalInfo;
struct /* coclass */ SignalInfo;
struct __declspec(uuid("b6b8eab8-0917-4eeb-bd3f-a4f147e6dd88"))
/* dual interface */ IMsdrChargeStateAssignmentFilter;
struct __declspec(uuid("03825ec8-d953-4213-afe7-ddeb92bc86c6"))
/* dual interface */ IMsdrPeakFilter;
struct /* coclass */ MsdrChargeStateAssignmentFilter;
struct /* coclass */ MsdrPeakFilter;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IDeviceInfo, __uuidof(IDeviceInfo));
_COM_SMARTPTR_TYPEDEF(ISignalInfo, __uuidof(ISignalInfo));
_COM_SMARTPTR_TYPEDEF(INonmsDataReader, __uuidof(INonmsDataReader));
_COM_SMARTPTR_TYPEDEF(IMsdrChargeStateAssignmentFilter, __uuidof(IMsdrChargeStateAssignmentFilter));
_COM_SMARTPTR_TYPEDEF(IMsdrPeakFilter, __uuidof(IMsdrPeakFilter));
_COM_SMARTPTR_TYPEDEF(IMsdrDataReader, __uuidof(IMsdrDataReader));

//
// Type library items
//

struct __declspec(uuid("f579db88-561b-4ced-a61e-10f02c5eac2f"))
MassSpecDataReader;
    // interface _Object
    // [ default ] interface IMsdrDataReader
    // interface INonmsDataReader

struct __declspec(uuid("0cce0b75-9cf9-4d6f-9d67-b35ccd7986ac"))
IDeviceInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDeviceName,put=PutDeviceName))
    _bstr_t DeviceName;
    __declspec(property(get=GetOrdinalNumber,put=PutOrdinalNumber))
    long OrdinalNumber;
    __declspec(property(get=GetDeviceType,put=PutDeviceType))
    enum DeviceType _DeviceType;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDeviceName ( );
    void PutDeviceName (
        _bstr_t pRetVal );
    long GetOrdinalNumber ( );
    void PutOrdinalNumber (
        long pRetVal );
    enum DeviceType GetDeviceType ( );
    void PutDeviceType (
        enum DeviceType pRetVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DeviceName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DeviceName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_OrdinalNumber (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall put_OrdinalNumber (
        /*[in]*/ long pRetVal ) = 0;
      virtual HRESULT __stdcall get_DeviceType (
        /*[out,retval]*/ enum DeviceType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DeviceType (
        /*[in]*/ enum DeviceType pRetVal ) = 0;
};

struct __declspec(uuid("9cbff297-41e1-4db2-900c-2225c1579213"))
DeviceInfo;
    // interface _Object
    // [ default ] interface IDeviceInfo

struct __declspec(uuid("6c227a08-da76-4818-8711-0205abb14875"))
ISignalInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDeviceInformation,put=PutRefDeviceInformation))
    IDeviceInfoPtr DeviceInformation;
    __declspec(property(get=GetSignalName,put=PutSignalName))
    _bstr_t SignalName;

    //
    // Wrapper methods for error-handling
    //

    IDeviceInfoPtr GetDeviceInformation ( );
    void PutRefDeviceInformation (
        struct IDeviceInfo * pRetVal );
    _bstr_t GetSignalName ( );
    void PutSignalName (
        _bstr_t pRetVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DeviceInformation (
        /*[out,retval]*/ struct IDeviceInfo * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_DeviceInformation (
        /*[in]*/ struct IDeviceInfo * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SignalName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_SignalName (
        /*[in]*/ BSTR pRetVal ) = 0;
};

struct __declspec(uuid("a4d3c36a-d665-4a86-ab33-1f3228cdcfbd"))
INonmsDataReader : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    SAFEARRAY * GetNonmsDevices ( );
    SAFEARRAY * GetSignalInfo (
        struct IDeviceInfo * dev,
        enum StoredDataType type );
    BDA::IBDAChromDataPtr GetSignal (
        struct ISignalInfo * sig );
    BDA::IBDAChromDataPtr GetTWC (
        struct IDeviceInfo * dev );
    BDA::IBDAChromDataPtr GetEWC (
        struct IDeviceInfo * dev,
        struct IRange * signal,
        struct IRange * reference );
    SAFEARRAY * GetUVSpectrum (
        struct IDeviceInfo * dev,
        struct IRange * scanRange );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetNonmsDevices (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSignalInfo (
        /*[in]*/ struct IDeviceInfo * dev,
        /*[in]*/ enum StoredDataType type,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSignal (
        /*[in]*/ struct ISignalInfo * sig,
        /*[out,retval]*/ struct BDA::IBDAChromData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetTWC (
        /*[in]*/ struct IDeviceInfo * dev,
        /*[out,retval]*/ struct BDA::IBDAChromData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetEWC (
        /*[in]*/ struct IDeviceInfo * dev,
        /*[in]*/ struct IRange * signal,
        /*[in]*/ struct IRange * reference,
        /*[out,retval]*/ struct BDA::IBDAChromData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetUVSpectrum (
        /*[in]*/ struct IDeviceInfo * dev,
        /*[in]*/ struct IRange * scanRange,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
};

struct __declspec(uuid("886d102e-99d6-4641-af84-5e41f9c98dda"))
SignalInfo;
    // interface _Object
    // [ default ] interface ISignalInfo

struct __declspec(uuid("b6b8eab8-0917-4eeb-bd3f-a4f147e6dd88"))
IMsdrChargeStateAssignmentFilter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAbsoluteTolerance,put=PutAbsoluteTolerance))
    double AbsoluteTolerance;
    __declspec(property(get=GetLimitMaxChargeState,put=PutLimitMaxChargeState))
    VARIANT_BOOL LimitMaxChargeState;
    __declspec(property(get=GetMaximumChargeState,put=PutMaximumChargeState))
    long MaximumChargeState;
    __declspec(property(get=GetRelativeTolerance,put=PutRelativeTolerance))
    double RelativeTolerance;
    __declspec(property(get=GetRequirePeptideLikeAbundanceProfile,put=PutRequirePeptideLikeAbundanceProfile))
    VARIANT_BOOL RequirePeptideLikeAbundanceProfile;

    //
    // Wrapper methods for error-handling
    //

    double GetAbsoluteTolerance ( );
    void PutAbsoluteTolerance (
        double pRetVal );
    VARIANT_BOOL GetLimitMaxChargeState ( );
    void PutLimitMaxChargeState (
        VARIANT_BOOL pRetVal );
    long GetMaximumChargeState ( );
    void PutMaximumChargeState (
        long pRetVal );
    double GetRelativeTolerance ( );
    void PutRelativeTolerance (
        double pRetVal );
    VARIANT_BOOL GetRequirePeptideLikeAbundanceProfile ( );
    void PutRequirePeptideLikeAbundanceProfile (
        VARIANT_BOOL pRetVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AbsoluteTolerance (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_AbsoluteTolerance (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_LimitMaxChargeState (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_LimitMaxChargeState (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_MaximumChargeState (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MaximumChargeState (
        /*[in]*/ long pRetVal ) = 0;
      virtual HRESULT __stdcall get_RelativeTolerance (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_RelativeTolerance (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_RequirePeptideLikeAbundanceProfile (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_RequirePeptideLikeAbundanceProfile (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
};

struct __declspec(uuid("03825ec8-d953-4213-afe7-ddeb92bc86c6"))
IMsdrPeakFilter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRelativeThreshold,put=PutRelativeThreshold))
    double RelativeThreshold;
    __declspec(property(get=GetAbsoluteThreshold,put=PutAbsoluteThreshold))
    double AbsoluteThreshold;
    __declspec(property(get=GetMaxNumPeaks,put=PutMaxNumPeaks))
    long MaxNumPeaks;

    //
    // Wrapper methods for error-handling
    //

    double GetRelativeThreshold ( );
    void PutRelativeThreshold (
        double pRetVal );
    double GetAbsoluteThreshold ( );
    void PutAbsoluteThreshold (
        double pRetVal );
    long GetMaxNumPeaks ( );
    void PutMaxNumPeaks (
        long pRetVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RelativeThreshold (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_RelativeThreshold (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_AbsoluteThreshold (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_AbsoluteThreshold (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_MaxNumPeaks (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MaxNumPeaks (
        /*[in]*/ long pRetVal ) = 0;
};

struct __declspec(uuid("da2b5d36-f15c-4484-9496-b0415cfe0c59"))
IMsdrDataReader : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFileInformation))
    BDA::IBDAFileInformationPtr FileInformation;
    __declspec(property(get=GetMSScanFileInformation))
    BDA::IBDAMSScanFileInformationPtr MSScanFileInformation;
    __declspec(property(get=GetSchemaDefaultDirectory,put=PutSchemaDefaultDirectory))
    _bstr_t SchemaDefaultDirectory;
    __declspec(property(get=GetActualsInformation))
    BDA::IBDAActualsPtr ActualsInformation;
    __declspec(property(get=GetVersion))
    _bstr_t Version;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL OpenDataFile (
        _bstr_t fileName );
    HRESULT CloseDataFile ( );
    VARIANT_BOOL RefreshDataFile (
        VARIANT_BOOL * isNewDataPresent );
    BDA::IBDAFileInformationPtr GetFileInformation ( );
    BDA::IBDAMSScanFileInformationPtr GetMSScanFileInformation ( );
    BDA::IBDAMSScanFileInformationPtr GetMSScanInformation (
        double retentionTime );
    BDA::IBDAChromDataPtr GetTIC ( );
    BDA::IBDAChromDataPtr GetTIC_2 (
        double startTime,
        double endTime,
        enum MSScanType scanType,
        enum IonPolarity ionPloarity,
        enum IonizationMode ionMode );
    BDA::IBDAChromDataPtr GetBPC ( );
    BDA::IBDAChromDataPtr GetBPC_2 (
        double startTime,
        double endTime,
        enum MSScanType scanType,
        enum IonPolarity ionPolarity,
        enum IonizationMode ionMode );
    BDA::IBDAChromDataPtr GetEIC (
        SAFEARRAY * massOfInterest,
        enum MSScanType scanType,
        enum IonPolarity ionPolarity,
        enum IonizationMode ionMode );
    SAFEARRAY * GetEICForEachMass (
        SAFEARRAY * massOfInterest,
        enum MSScanType scanType,
        enum IonPolarity ionPolarity,
        enum IonizationMode ionMode );
    SAFEARRAY * GetChromatogram (
        struct BDA::IBDAChromFilter * chromFilter );
    BDA::IBDASpecDataPtr GetSpectrum (
        double retentionTime,
        enum MSScanType scanType,
        enum IonPolarity ionPloarity,
        enum IonizationMode ionMode,
        struct IMsdrPeakFilter * peakFilter );
    BDA::IBDASpecDataPtr GetSpectrum_2 (
        struct IRange * rtRange,
        struct IMsdrPeakFilter * peakFilter );
    BDA::IBDASpecDataPtr GetSpectrum_3 (
        SAFEARRAY * rtRanges,
        struct IMsdrPeakFilter * peakFilter );
    SAFEARRAY * GetSpectrum_4 (
        struct BDA::IBDASpecFilter * specFilter,
        struct IMsdrPeakFilter * peakFilter );
    SAFEARRAY * GetSpectrum_5 (
        struct BDA::IBDASpecFilter * specFilter );
    BDA::IBDASpecDataPtr GetSpectrum_6 (
        long rowNumber,
        struct IMsdrPeakFilter * peakMSFilter,
        struct IMsdrPeakFilter * peakMSMSFilter );
    BDA::IBDASpecDataPtr GetSpectrum_7 (
        double retentionTime,
        enum MSScanType scanType,
        enum IonPolarity ionPolarity,
        enum IonizationMode ionMode,
        struct IMsdrPeakFilter * peakFilter,
        VARIANT_BOOL peakFilterOnCentroid );
    HRESULT Deisotope (
        struct BDA::IBDASpecData * spectrum,
        struct IMsdrChargeStateAssignmentFilter * csaFilter );
    _bstr_t GetSchemaDefaultDirectory ( );
    void PutSchemaDefaultDirectory (
        _bstr_t pRetVal );
    BDA::IBDAActualsPtr GetActualsInformation ( );
    _bstr_t GetVersion ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_OpenDataFile (
        /*[in]*/ BSTR fileName,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_CloseDataFile ( ) = 0;
      virtual HRESULT __stdcall raw_RefreshDataFile (
        /*[out]*/ VARIANT_BOOL * isNewDataPresent,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_FileInformation (
        /*[out,retval]*/ struct BDA::IBDAFileInformation * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSScanFileInformation (
        /*[out,retval]*/ struct BDA::IBDAMSScanFileInformation * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetMSScanInformation (
        /*[in]*/ double retentionTime,
        /*[out,retval]*/ struct BDA::IBDAMSScanFileInformation * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetTIC (
        /*[out,retval]*/ struct BDA::IBDAChromData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetTIC_2 (
        /*[in]*/ double startTime,
        /*[in]*/ double endTime,
        /*[in]*/ enum MSScanType scanType,
        /*[in]*/ enum IonPolarity ionPloarity,
        /*[in]*/ enum IonizationMode ionMode,
        /*[out,retval]*/ struct BDA::IBDAChromData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetBPC (
        /*[out,retval]*/ struct BDA::IBDAChromData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetBPC_2 (
        /*[in]*/ double startTime,
        /*[in]*/ double endTime,
        /*[in]*/ enum MSScanType scanType,
        /*[in]*/ enum IonPolarity ionPolarity,
        /*[in]*/ enum IonizationMode ionMode,
        /*[out,retval]*/ struct BDA::IBDAChromData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetEIC (
        /*[in]*/ SAFEARRAY * massOfInterest,
        /*[in]*/ enum MSScanType scanType,
        /*[in]*/ enum IonPolarity ionPolarity,
        /*[in]*/ enum IonizationMode ionMode,
        /*[out,retval]*/ struct BDA::IBDAChromData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetEICForEachMass (
        /*[in]*/ SAFEARRAY * massOfInterest,
        /*[in]*/ enum MSScanType scanType,
        /*[in]*/ enum IonPolarity ionPolarity,
        /*[in]*/ enum IonizationMode ionMode,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetChromatogram (
        /*[in]*/ struct BDA::IBDAChromFilter * chromFilter,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSpectrum (
        /*[in]*/ double retentionTime,
        /*[in]*/ enum MSScanType scanType,
        /*[in]*/ enum IonPolarity ionPloarity,
        /*[in]*/ enum IonizationMode ionMode,
        /*[in]*/ struct IMsdrPeakFilter * peakFilter,
        /*[out,retval]*/ struct BDA::IBDASpecData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSpectrum_2 (
        /*[in]*/ struct IRange * rtRange,
        /*[in]*/ struct IMsdrPeakFilter * peakFilter,
        /*[out,retval]*/ struct BDA::IBDASpecData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSpectrum_3 (
        /*[in]*/ SAFEARRAY * rtRanges,
        /*[in]*/ struct IMsdrPeakFilter * peakFilter,
        /*[out,retval]*/ struct BDA::IBDASpecData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSpectrum_4 (
        /*[in]*/ struct BDA::IBDASpecFilter * specFilter,
        /*[in]*/ struct IMsdrPeakFilter * peakFilter,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSpectrum_5 (
        /*[in]*/ struct BDA::IBDASpecFilter * specFilter,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSpectrum_6 (
        /*[in]*/ long rowNumber,
        /*[in]*/ struct IMsdrPeakFilter * peakMSFilter,
        /*[in]*/ struct IMsdrPeakFilter * peakMSMSFilter,
        /*[out,retval]*/ struct BDA::IBDASpecData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_GetSpectrum_7 (
        /*[in]*/ double retentionTime,
        /*[in]*/ enum MSScanType scanType,
        /*[in]*/ enum IonPolarity ionPolarity,
        /*[in]*/ enum IonizationMode ionMode,
        /*[in]*/ struct IMsdrPeakFilter * peakFilter,
        /*[in]*/ VARIANT_BOOL peakFilterOnCentroid,
        /*[out,retval]*/ struct BDA::IBDASpecData * * pRetVal ) = 0;
      virtual HRESULT __stdcall raw_Deisotope (
        /*[in]*/ struct BDA::IBDASpecData * spectrum,
        /*[in]*/ struct IMsdrChargeStateAssignmentFilter * csaFilter ) = 0;
      virtual HRESULT __stdcall get_SchemaDefaultDirectory (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_SchemaDefaultDirectory (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_ActualsInformation (
        /*[out,retval]*/ struct BDA::IBDAActuals * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
};

struct __declspec(uuid("704937a0-0509-4df6-a36a-3dd0bfbe1a4b"))
MsdrChargeStateAssignmentFilter;
    // interface _Object
    // [ default ] interface IMsdrChargeStateAssignmentFilter

struct __declspec(uuid("f0f5c3f5-33ba-4a38-bada-c1ad79949268"))
MsdrPeakFilter;
    // interface _Object
    // [ default ] interface IMsdrPeakFilter

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_MSDR =
    {0x18a9d1d8,0x42bc,0x4a5d,{0xad,0x59,0x59,0x0f,0x40,0x49,0xa5,0xb5}};
extern "C" const GUID __declspec(selectany) CLSID_MassSpecDataReader =
    {0xf579db88,0x561b,0x4ced,{0xa6,0x1e,0x10,0xf0,0x2c,0x5e,0xac,0x2f}};
extern "C" const GUID __declspec(selectany) IID_IDeviceInfo =
    {0x0cce0b75,0x9cf9,0x4d6f,{0x9d,0x67,0xb3,0x5c,0xcd,0x79,0x86,0xac}};
extern "C" const GUID __declspec(selectany) CLSID_DeviceInfo =
    {0x9cbff297,0x41e1,0x4db2,{0x90,0x0c,0x22,0x25,0xc1,0x57,0x92,0x13}};
extern "C" const GUID __declspec(selectany) IID_ISignalInfo =
    {0x6c227a08,0xda76,0x4818,{0x87,0x11,0x02,0x05,0xab,0xb1,0x48,0x75}};
extern "C" const GUID __declspec(selectany) IID_INonmsDataReader =
    {0xa4d3c36a,0xd665,0x4a86,{0xab,0x33,0x1f,0x32,0x28,0xcd,0xcf,0xbd}};
extern "C" const GUID __declspec(selectany) CLSID_SignalInfo =
    {0x886d102e,0x99d6,0x4641,{0xaf,0x84,0x5e,0x41,0xf9,0xc9,0x8d,0xda}};
extern "C" const GUID __declspec(selectany) IID_IMsdrChargeStateAssignmentFilter =
    {0xb6b8eab8,0x0917,0x4eeb,{0xbd,0x3f,0xa4,0xf1,0x47,0xe6,0xdd,0x88}};
extern "C" const GUID __declspec(selectany) IID_IMsdrPeakFilter =
    {0x03825ec8,0xd953,0x4213,{0xaf,0xe7,0xdd,0xeb,0x92,0xbc,0x86,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IMsdrDataReader =
    {0xda2b5d36,0xf15c,0x4484,{0x94,0x96,0xb0,0x41,0x5c,0xfe,0x0c,0x59}};
extern "C" const GUID __declspec(selectany) CLSID_MsdrChargeStateAssignmentFilter =
    {0x704937a0,0x0509,0x4df6,{0xa3,0x6a,0x3d,0xd0,0xbf,0xbe,0x1a,0x4b}};
extern "C" const GUID __declspec(selectany) CLSID_MsdrPeakFilter =
    {0xf0f5c3f5,0x33ba,0x4a38,{0xba,0xda,0xc1,0xad,0x79,0x94,0x92,0x68}};

//
// Wrapper method implementations
//

#include "massspecdatareader.tli"

} // namespace MSDR

#pragma pack(pop)
