// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (6d0486bd).
//
// c:\bumbershoot\src\pwiz-src\build\pwiz\data\vendor_readers\agilent\msvc-9.0\release\link-static\threading-multi\basedataaccess.tlh
//
// C++ source equivalent of Win32 type library BaseDataAccess.tlb
// compiler-generated file created 05/18/09 at 12:38:58 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace BDA {

//
// Forward references and typedefs
//

struct __declspec(uuid("04135262-614e-4ba2-b730-b58e3a7b97a0"))
/* LIBID */ __BaseDataAccess;
struct __declspec(uuid("266d6d89-c740-448c-abae-5082a63f4a72"))
/* dual interface */ IBDAAcquisitionData;
struct /* coclass */ BDAAcquisitionData;
struct __declspec(uuid("d82436b0-4914-40e5-b4b5-351678f0f871"))
/* dual interface */ IBDAActualData;
struct /* coclass */ BDAActualData;
struct __declspec(uuid("22857f71-9522-4475-a222-65842e4e50e7"))
/* dual interface */ IBDAFileInformation;
struct /* coclass */ BDAFileInformation;
struct __declspec(uuid("68e1a1e8-5ba9-4a79-961a-fecccfae6a1d"))
/* dual interface */ IBDAMSScanFileInformation;
struct /* coclass */ BDAMSScanFileInformation;
struct /* coclass */ MSScanFileInformationIterator;
struct __declspec(uuid("09c0515b-9465-4340-a2e9-b74b769a98e3"))
/* dual interface */ IBDAMSScanTypeInformation;
struct /* coclass */ BDAMSScanTypeInformation;
struct __declspec(uuid("4e95dcfd-7da1-4558-8081-043304654ccc"))
/* dual interface */ IBDASampleData;
struct /* coclass */ BDASampleData;
struct __declspec(uuid("26e46410-e7d3-4306-a123-82b49de347d8"))
/* dual interface */ IBDAEvents;
struct __declspec(uuid("8b8558de-bbb0-40b0-a9d6-c3314456f274"))
/* dual interface */ IBDAReadChromatogram;
struct __declspec(uuid("3a365594-a7b2-47bd-891b-a3edb23c0097"))
/* dual interface */ IBDAReadSpectra;
struct __declspec(uuid("b5a3f889-9fec-417e-a945-4590494ac6a6"))
/* dual interface */ IBDASample;
struct __declspec(uuid("00a84f11-0427-4fdf-a4a7-809709250e1f"))
/* dual interface */ IBDAActuals;
struct __declspec(uuid("7b2bf740-2f30-4731-8572-a7fd6376b893"))
/* dual interface */ IBDAUserCalibration;
struct __declspec(uuid("0b423064-67fc-4906-bd0a-64c52d97e04c"))
/* dual interface */ IBDADataAccess;
struct /* coclass */ BDADataAccess;
struct __declspec(uuid("23dea6d7-abe5-47c2-8d9c-170ebb5796cc"))
/* dual interface */ IBDAChromData;
struct /* coclass */ BDAChromData;
struct __declspec(uuid("066f2ea6-8239-41b0-9a57-573a5c66418f"))
/* dual interface */ IBDASpecData;
struct /* coclass */ BDASpecData;
struct __declspec(uuid("fefe93f3-e3c4-49eb-92d7-585629995e12"))
/* dual interface */ IBDAChromFilter;
struct __declspec(uuid("3ff555d8-92a1-4287-b365-02897899c178"))
/* dual interface */ IBDAPeak;
struct __declspec(uuid("c05a2780-0393-46c9-bf90-d2d679bf1a79"))
/* dual interface */ IBDAPeakSpecFilter;
struct __declspec(uuid("2bc66a59-6c80-44f5-b9b7-a5265b5f8238"))
/* dual interface */ IBDASpecFilter;
struct /* coclass */ BDAChromFilter;
struct /* coclass */ BDAPeak;
struct /* coclass */ BDAPeakSpecFilter;
struct /* coclass */ BDASpecFilter;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IBDAAcquisitionData, __uuidof(IBDAAcquisitionData));
_COM_SMARTPTR_TYPEDEF(IBDAActualData, __uuidof(IBDAActualData));
_COM_SMARTPTR_TYPEDEF(IBDAMSScanTypeInformation, __uuidof(IBDAMSScanTypeInformation));
_COM_SMARTPTR_TYPEDEF(IBDAMSScanFileInformation, __uuidof(IBDAMSScanFileInformation));
_COM_SMARTPTR_TYPEDEF(IBDAFileInformation, __uuidof(IBDAFileInformation));
_COM_SMARTPTR_TYPEDEF(IBDASampleData, __uuidof(IBDASampleData));
_COM_SMARTPTR_TYPEDEF(IBDAEvents, __uuidof(IBDAEvents));
_COM_SMARTPTR_TYPEDEF(IBDASample, __uuidof(IBDASample));
_COM_SMARTPTR_TYPEDEF(IBDAActuals, __uuidof(IBDAActuals));
_COM_SMARTPTR_TYPEDEF(IBDAUserCalibration, __uuidof(IBDAUserCalibration));
_COM_SMARTPTR_TYPEDEF(IBDADataAccess, __uuidof(IBDADataAccess));
_COM_SMARTPTR_TYPEDEF(IBDAChromData, __uuidof(IBDAChromData));
_COM_SMARTPTR_TYPEDEF(IBDASpecData, __uuidof(IBDASpecData));
_COM_SMARTPTR_TYPEDEF(IBDAChromFilter, __uuidof(IBDAChromFilter));
_COM_SMARTPTR_TYPEDEF(IBDAReadChromatogram, __uuidof(IBDAReadChromatogram));
_COM_SMARTPTR_TYPEDEF(IBDAPeak, __uuidof(IBDAPeak));
_COM_SMARTPTR_TYPEDEF(IBDAPeakSpecFilter, __uuidof(IBDAPeakSpecFilter));
_COM_SMARTPTR_TYPEDEF(IBDASpecFilter, __uuidof(IBDASpecFilter));
_COM_SMARTPTR_TYPEDEF(IBDAReadSpectra, __uuidof(IBDAReadSpectra));

//
// Type library items
//

struct __declspec(uuid("266d6d89-c740-448c-abae-5082a63f4a72"))
IBDAAcquisitionData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BPMassArray (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_PointCount (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_RetentionTimeArray (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
};

struct __declspec(uuid("b309ac6a-c568-458a-add9-0ee3ec191bad"))
BDAAcquisitionData;
    // interface _Object
    // [ default ] interface IBDAAcquisitionData

struct __declspec(uuid("d82436b0-4914-40e5-b4b5-351678f0f871"))
IBDAActualData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Category (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_DataValue (
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_DataValue (
        /*[in]*/ VARIANT pRetVal ) = 0;
      virtual HRESULT __stdcall get_DisplayEffectType (
        /*[out,retval]*/ enum DisplayEffectType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DisplayEffectType (
        /*[in]*/ enum DisplayEffectType pRetVal ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DisplayName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_DisplayValue (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DisplayValue (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_InternalName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_InternalName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Unit (
        /*[in]*/ BSTR pRetVal ) = 0;
};

struct __declspec(uuid("95021e41-291b-4c09-a212-4473afe0fee3"))
BDAActualData;
    // interface _Object
    // [ default ] interface IBDAActualData
    // interface ICloneable

struct __declspec(uuid("7172b2c2-02d5-46bc-b636-278abd3dc21f"))
BDAFileInformation;
    // interface _Object
    // [ default ] interface IBDAFileInformation
    // interface ICloneable

struct __declspec(uuid("d03ad9bf-051e-4a58-a1ef-024abbc96504"))
BDAMSScanFileInformation;
    // interface _Object
    // [ default ] interface IBDAMSScanFileInformation
    // interface ICloneable
    // interface IEnumerable

struct __declspec(uuid("ca256fad-4467-41e1-81cc-71541f42eccd"))
MSScanFileInformationIterator;
    // interface _Object
    // [ default ] interface IEnumerator

struct __declspec(uuid("09c0515b-9465-4340-a2e9-b74b769a98e3"))
IBDAMSScanTypeInformation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MSScanType (
        /*[out,retval]*/ enum MSScanType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonPolarities (
        /*[out,retval]*/ enum IonPolarity * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MzOfInterest (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall Contains (
        /*[in]*/ double MzOfInterest,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out,retval]*/ struct IBDAMSScanTypeInformation * * pRetVal ) = 0;
};

struct __declspec(uuid("68e1a1e8-5ba9-4a79-961a-fecccfae6a1d"))
IBDAMSScanFileInformation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FileHasMassSpectralData (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MzScanRangeMinimum (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MzScanRangeMaximum (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScanTypes (
        /*[out,retval]*/ enum MSScanType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SpectraFormat (
        /*[out,retval]*/ enum MSStorageMode * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonModes (
        /*[out,retval]*/ enum IonizationMode * pRetVal ) = 0;
      virtual HRESULT __stdcall get_DeviceType (
        /*[out,retval]*/ enum DeviceType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MassRange (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSLevel (
        /*[out,retval]*/ enum MSLevel * pRetVal ) = 0;
    virtual HRESULT _VtblGapPlaceholder1( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall get_FragmentorVoltage (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
    virtual HRESULT _VtblGapPlaceholder2( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall get_CollisionEnergy (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonPolarity (
        /*[out,retval]*/ enum IonPolarity * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScanTypesInformationCount (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MRMTransitions (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SIMIons (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScanMethodNumbers (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_TotalScansPresent (
        /*[out,retval]*/ __int64 * pRetVal ) = 0;
      virtual HRESULT __stdcall IsFixedCycleLengthDataPresent (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall IsMultipleSpectraPerScanPresent (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall GetMSScanTypeInformation (
        /*[in]*/ enum MSScanType scanType,
        /*[out,retval]*/ struct IBDAMSScanTypeInformation * * pRetVal ) = 0;
      virtual HRESULT __stdcall GetMSScanTypeInformation_2 (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall Contains (
        /*[in]*/ enum MSScanType key,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out,retval]*/ struct IBDAMSScanFileInformation * * pRetVal ) = 0;
};

struct __declspec(uuid("22857f71-9522-4475-a222-65842e4e50e7"))
IBDAFileInformation : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DataFileName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_AcquisitionTime (
        /*[out,retval]*/ DATE * pRetVal ) = 0;
    virtual HRESULT _VtblGapPlaceholder1( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall IsStoredDataTypePresent (
        /*[in]*/ BSTR deviceNameOrdinalNumber,
        /*[in]*/ enum StoredDataType desiredType,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall GetDeviceName (
        /*[in]*/ enum DeviceType devType,
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall IsNonMSDataPresent (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
    virtual HRESULT _VtblGapPlaceholder2( ) { return E_NOTIMPL; }
    virtual HRESULT _VtblGapPlaceholder3( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall IsUVSpectralDataPresent (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SeparationTechnique (
        /*[out,retval]*/ enum SeparationTechnique * pRetVal ) = 0;
      virtual HRESULT __stdcall IsUVSignalPresent (
        /*[in]*/ enum DeviceType devType,
        /*[in]*/ BSTR signalName,
        /*[in,out]*/ BSTR * devName,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall IsMSDataPresent (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSScanFileInformation (
        /*[out,retval]*/ struct IBDAMSScanFileInformation * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MeasurementType (
        /*[out,retval]*/ enum MeasurementType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IRMStatus (
        /*[out,retval]*/ enum IRMStatus * pRetVal ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out,retval]*/ struct IBDAFileInformation * * pRetVal ) = 0;
      virtual HRESULT __stdcall Clear ( ) = 0;
};

struct __declspec(uuid("d733de2b-949e-4358-add9-3a69d191bd7c"))
BDAMSScanTypeInformation;
    // interface _Object
    // [ default ] interface IBDAMSScanTypeInformation
    // interface ICloneable

struct __declspec(uuid("4e95dcfd-7da1-4558-8081-043304654ccc"))
IBDASampleData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ enum SampleCategory * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Category (
        /*[in]*/ enum SampleCategory pRetVal ) = 0;
      virtual HRESULT __stdcall get_DataValue (
        /*[out,retval]*/ VARIANT * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_DataValue (
        /*[in]*/ VARIANT pRetVal ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DisplayName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_DisplayValue (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DisplayValue (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_InternalName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_InternalName (
        /*[in]*/ BSTR pRetVal ) = 0;
};

struct __declspec(uuid("1bafa631-cb79-4bc5-96d5-7bd425ce335f"))
BDASampleData;
    // interface _Object
    // [ default ] interface IBDASampleData
    // interface ICloneable

struct __declspec(uuid("26e46410-e7d3-4306-a123-82b49de347d8"))
IBDAEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CancelIndicator (
        /*[out,retval]*/ IUnknown * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_CancelIndicator (
        /*[in]*/ IUnknown * pRetVal ) = 0;
      virtual HRESULT __stdcall add_ProgressEvent (
        /*[in]*/ IUnknown * value ) = 0;
      virtual HRESULT __stdcall remove_ProgressEvent (
        /*[in]*/ IUnknown * value ) = 0;
};

struct __declspec(uuid("b5a3f889-9fec-417e-a945-4590494ac6a6"))
IBDASample : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT _VtblGapPlaceholder1( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall GetSampleValue (
        /*[in]*/ BSTR InternalName,
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
    virtual HRESULT _VtblGapPlaceholder2( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall GetSampleCollection (
        /*[in]*/ enum SampleCategory Category,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall GetSampleInfo (
        /*[in]*/ BSTR internalNamePrefix,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
};

struct __declspec(uuid("00a84f11-0427-4fdf-a4a7-809709250e1f"))
IBDAActuals : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IsActualsPresent (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
    virtual HRESULT _VtblGapPlaceholder1( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall GetActualNames (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall GetActualValue (
        /*[in]*/ BSTR actualDisplayName,
        /*[out]*/ SAFEARRAY * * xArray,
        /*[out]*/ SAFEARRAY * * yArray ) = 0;
      virtual HRESULT __stdcall GetActualCollection (
        /*[in]*/ double timeInMins,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
};

struct __declspec(uuid("7b2bf740-2f30-4731-8572-a7fd6376b893"))
IBDAUserCalibration : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall IsUserCalibrationPresent (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall SaveUserCalibration (
        /*[in]*/ IUnknown * psetTofCalib,
        /*[in]*/ enum IonPolarity IonPolarity ) = 0;
      virtual HRESULT __stdcall SaveUserCalibration_2 (
        /*[in]*/ IUnknown * psetTofCalib,
        /*[in]*/ SAFEARRAY * specfilterArray ) = 0;
      virtual HRESULT __stdcall ClearUserCalibration ( ) = 0;
};

struct __declspec(uuid("0b423064-67fc-4906-bd0a-64c52d97e04c"))
IBDADataAccess : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OpenDataFile (
        /*[in]*/ BSTR filename,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall OpenDataFile_2 (
        /*[in]*/ BSTR filename,
        /*[in]*/ VARIANT_BOOL bOptimizeFileHandling,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall CloseDataFile ( ) = 0;
      virtual HRESULT __stdcall RefreshDataFile (
        /*[out]*/ VARIANT_BOOL * isNewDataPresent,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall IsAcquisitionStatusComplete (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall GetTimeSegmentRanges (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MassRangesOverallLimit (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_FileInformation (
        /*[out,retval]*/ struct IBDAFileInformation * * pRetVal ) = 0;
      virtual HRESULT __stdcall GetMSScanInformation (
        /*[in]*/ double retentionTime,
        /*[out,retval]*/ struct IBDAMSScanFileInformation * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_DataFileName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_AcquisitionMetaData (
        /*[out,retval]*/ struct IBDAAcquisitionData * * pRetVal ) = 0;
    virtual HRESULT _VtblGapPlaceholder1( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall IsDataDependentScanInfoPresent (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall IsDataFileOpen (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
    virtual HRESULT _VtblGapPlaceholder2( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall get_ScanRejectionFlagValueTable (
        /*[out,retval]*/ IUnknown * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_ScanRejectionFlagValueTable (
        /*[in]*/ IUnknown * pRetVal ) = 0;
      virtual HRESULT __stdcall ClearScanRejectionFlagValueTable ( ) = 0;
      virtual HRESULT __stdcall PersistScanRejectionFlagValueTable ( ) = 0;
    virtual HRESULT _VtblGapPlaceholder3( ) { return E_NOTIMPL; }
      virtual HRESULT __stdcall GetTimeSegmentDetails (
        /*[in]*/ long timesegmentID,
        /*[out]*/ long * numOfScans,
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SchemaDefaultDirectory (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_SchemaDefaultDirectory (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_DesiredMSStorageTypeToUse (
        /*[out,retval]*/ enum DesiredMSStorageType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DesiredMSStorageTypeToUse (
        /*[in]*/ enum DesiredMSStorageType pRetVal ) = 0;
};

struct __declspec(uuid("f9041229-01cc-47d8-86ed-87e73a74b305"))
BDADataAccess;
    // interface _Object
    // interface IDisposable
    // [ default ] interface IBDADataAccess
    // interface IBDAReadChromatogram
    // interface IBDAReadSpectra
    // interface IBDASample
    // interface IBDAActuals
    // interface IBDAUserCalibration
    // interface IBDAEvents

struct __declspec(uuid("23dea6d7-abe5-47c2-8d9c-170ebb5796cc"))
IBDAChromData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ChromatogramType (
        /*[out,retval]*/ enum ChromType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_TotalDataPoints (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_xArray (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_yArray (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_AcquiredTimeRange (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MeasuredMassRange (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MzRegionsWereExcluded (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_AbundanceLimit (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_CollisionEnergy (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_FragmentorVoltage (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonizationMode (
        /*[out,retval]*/ enum IonizationMode * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonPolarity (
        /*[out,retval]*/ enum IonPolarity * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSScanType (
        /*[out,retval]*/ enum MSScanType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSLevelInfo (
        /*[out,retval]*/ enum MSLevel * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSStorageMode (
        /*[out,retval]*/ enum MSStorageMode * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MzOfInterest (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_Threshold (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SamplingPeriod (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_DeviceName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_DeviceType (
        /*[out,retval]*/ enum DeviceType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_OrdinalNumber (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IsCycleSummed (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_signalName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SignalDescription (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out,retval]*/ struct IBDAChromData * * pRetVal ) = 0;
};

struct __declspec(uuid("f6d1b211-24fd-4cc5-a181-fca210a25a7e"))
BDAChromData;
    // interface _Object
    // interface IDisposable
    // [ default ] interface IBDAChromData
    // interface ICloneable

struct __declspec(uuid("066f2ea6-8239-41b0-9a57-573a5c66418f"))
IBDASpecData : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SpectrumType (
        /*[out,retval]*/ enum SpecType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_TotalDataPoints (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_xArray (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_yArray (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_AcquiredTimeRange (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MeasuredMassRange (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_TotalScanCount (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_AbundanceLimit (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_CollisionEnergy (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_FragmentorVoltage (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonizationMode (
        /*[out,retval]*/ enum IonizationMode * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonPolarity (
        /*[out,retval]*/ enum IonPolarity * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSScanType (
        /*[out,retval]*/ enum MSScanType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSLevelInfo (
        /*[out,retval]*/ enum MSLevel * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSStorageMode (
        /*[out,retval]*/ enum MSStorageMode * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MzOfInterest (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_Threshold (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SamplingPeriod (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_DeviceName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall get_DeviceType (
        /*[out,retval]*/ enum DeviceType * pRetVal ) = 0;
      virtual HRESULT __stdcall get_OrdinalNumber (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IsDataInMassUnit (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall GetPrecursorIon (
        /*[out]*/ long * precursorCount,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out,retval]*/ struct IBDASpecData * * pRetVal ) = 0;
      virtual HRESULT __stdcall ConvertDataToMassUnits ( ) = 0;
      virtual HRESULT __stdcall GetPrecursorCharge (
        /*[out]*/ long * charge,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall GetPrecursorIntensity (
        /*[out]*/ double * precursorIntensity,
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScanId (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ParentScanId (
        /*[out,retval]*/ long * pRetVal ) = 0;
};

struct __declspec(uuid("298250ba-0e9d-4424-acd6-28ca54280a2c"))
BDASpecData;
    // interface _Object
    // interface IDisposable
    // [ default ] interface IBDASpecData
    // interface ICloneable

struct __declspec(uuid("fefe93f3-e3c4-49eb-92d7-585629995e12"))
IBDAChromFilter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ChromatogramType (
        /*[out,retval]*/ enum ChromType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ChromatogramType (
        /*[in]*/ enum ChromType pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSLevelFilter (
        /*[out,retval]*/ enum MSLevel * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MSLevelFilter (
        /*[in]*/ enum MSLevel pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSScanTypeFilter (
        /*[out,retval]*/ enum MSScanType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MSScanTypeFilter (
        /*[in]*/ enum MSScanType pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonPolarityFilter (
        /*[out,retval]*/ enum IonPolarity * pRetVal ) = 0;
      virtual HRESULT __stdcall put_IonPolarityFilter (
        /*[in]*/ enum IonPolarity pRetVal ) = 0;
      virtual HRESULT __stdcall get_MzOfInterestFilter (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MzOfInterestFilter (
        /*[in]*/ SAFEARRAY * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IncludeMassRanges (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall put_IncludeMassRanges (
        /*[in]*/ SAFEARRAY * pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScanRange (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_ScanRange (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_FragmentorVoltage (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_FragmentorVoltage (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_CollisionEnergy (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_CollisionEnergy (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonizationMode (
        /*[out,retval]*/ enum IonizationMode * pRetVal ) = 0;
      virtual HRESULT __stdcall put_IonizationMode (
        /*[in]*/ enum IonizationMode pRetVal ) = 0;
      virtual HRESULT __stdcall get_SingleChromatogramForAllMasses (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_SingleChromatogramForAllMasses (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_DoCycleSum (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DoCycleSum (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_ExtractOneChromatogramPerScanSegment (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ExtractOneChromatogramPerScanSegment (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScanSegmentNumber (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_ScanSegmentNumber (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_YValueInCounts (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_YValueInCounts (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_DesiredMSStorageType (
        /*[out,retval]*/ enum DesiredMSStorageType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DesiredMSStorageType (
        /*[in]*/ enum DesiredMSStorageType pRetVal ) = 0;
      virtual HRESULT __stdcall get_ChargeStateLimits (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_ChargeStateLimits (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_DeviceName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DeviceName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_OrdinalNumber (
        /*[out,retval]*/ __int64 * pRetVal ) = 0;
      virtual HRESULT __stdcall put_OrdinalNumber (
        /*[in]*/ __int64 pRetVal ) = 0;
      virtual HRESULT __stdcall get_signalName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_signalName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_SignalWavelength (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_SignalWavelength (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseReference (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_UseReference (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_ReferenceWavelength (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_ReferenceWavelength (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_SignalDescription (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_SignalDescription (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out,retval]*/ struct IBDAChromFilter * * pRetVal ) = 0;
};

struct __declspec(uuid("8b8558de-bbb0-40b0-a9d6-c3314456f274"))
IBDAReadChromatogram : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetChromatogram (
        /*[in]*/ struct IBDAChromFilter * extractParamSet,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall GetChromatogram_2 (
        /*[in]*/ struct IBDAChromFilter * extractParamSet,
        /*[in]*/ SAFEARRAY * excludeMassArray,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
};

struct __declspec(uuid("3ff555d8-92a1-4287-b365-02897899c178"))
IBDAPeak : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_StartBaselineY (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_StartBaselineY (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_EndBaselineY (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_EndBaselineY (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_CenterX (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_CenterX (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_CenterY (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_CenterY (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_BasePeakMass (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_BasePeakMass (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_ChargeState (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ChargeState (
        /*[in]*/ long pRetVal ) = 0;
};

struct __declspec(uuid("c05a2780-0393-46c9-bf90-d2d679bf1a79"))
IBDAPeakSpecFilter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UseApexScan (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_UseApexScan (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_PeakHeightThreshold (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_PeakHeightThreshold (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseTofSaturationFilter (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_UseTofSaturationFilter (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_UseTofSaturationMzRange (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_UseTofSaturationMzRange (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_TofSaturationThreshold (
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall put_TofSaturationThreshold (
        /*[in]*/ double pRetVal ) = 0;
      virtual HRESULT __stdcall get_TofSaturationMzRanges (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall put_TofSaturationMzRanges (
        /*[in]*/ SAFEARRAY * pRetVal ) = 0;
};

struct __declspec(uuid("2bc66a59-6c80-44f5-b9b7-a5265b5f8238"))
IBDASpecFilter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SpectrumType (
        /*[out,retval]*/ enum SpecType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_SpectrumType (
        /*[in]*/ enum SpecType pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScanRange (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ScanRange (
        /*[in]*/ SAFEARRAY * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MassRange (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_MassRange (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSLevelFilter (
        /*[out,retval]*/ enum MSLevel * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MSLevelFilter (
        /*[in]*/ enum MSLevel pRetVal ) = 0;
      virtual HRESULT __stdcall get_MSScanTypeFilter (
        /*[out,retval]*/ enum MSScanType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MSScanTypeFilter (
        /*[in]*/ enum MSScanType pRetVal ) = 0;
      virtual HRESULT __stdcall get_MzOfInterestFilter (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MzOfInterestFilter (
        /*[in]*/ SAFEARRAY * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonPolarityFilter (
        /*[out,retval]*/ enum IonPolarity * pRetVal ) = 0;
      virtual HRESULT __stdcall put_IonPolarityFilter (
        /*[in]*/ enum IonPolarity pRetVal ) = 0;
      virtual HRESULT __stdcall get_FragmentorVoltage (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_FragmentorVoltage (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_CollisionEnergy (
        /*[out,retval]*/ struct IRange * * pRetVal ) = 0;
      virtual HRESULT __stdcall putref_CollisionEnergy (
        /*[in]*/ struct IRange * pRetVal ) = 0;
      virtual HRESULT __stdcall get_IonizationMode (
        /*[out,retval]*/ enum IonizationMode * pRetVal ) = 0;
      virtual HRESULT __stdcall put_IonizationMode (
        /*[in]*/ enum IonizationMode pRetVal ) = 0;
      virtual HRESULT __stdcall get_DesiredMSStorageType (
        /*[out,retval]*/ enum DesiredMSStorageType * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DesiredMSStorageType (
        /*[in]*/ enum DesiredMSStorageType pRetVal ) = 0;
      virtual HRESULT __stdcall get_MassUnits (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_MassUnits (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_ExtractByCycle (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ExtractByCycle (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall get_ScanIds (
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall put_ScanIds (
        /*[in]*/ SAFEARRAY * pRetVal ) = 0;
      virtual HRESULT __stdcall get_AverageSpectrum (
        /*[out,retval]*/ VARIANT_BOOL * pRetVal ) = 0;
      virtual HRESULT __stdcall put_AverageSpectrum (
        /*[in]*/ VARIANT_BOOL pRetVal ) = 0;
      virtual HRESULT __stdcall Clone (
        /*[out,retval]*/ struct IBDASpecFilter * * pRetVal ) = 0;
      virtual HRESULT __stdcall get_DeviceName (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall put_DeviceName (
        /*[in]*/ BSTR pRetVal ) = 0;
      virtual HRESULT __stdcall get_OrdinalNumber (
        /*[out,retval]*/ __int64 * pRetVal ) = 0;
      virtual HRESULT __stdcall put_OrdinalNumber (
        /*[in]*/ __int64 pRetVal ) = 0;
};

struct __declspec(uuid("3a365594-a7b2-47bd-891b-a3edb23c0097"))
IBDAReadSpectra : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ReadSpectrum (
        /*[in]*/ struct IBDASpecFilter * specRequest,
        /*[in]*/ struct IBDAPeakSpecFilter * apseParameters,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall ReadSpectrum_2 (
        /*[in]*/ struct IBDASpecFilter * spectrumRequest,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall ReadSpectrum_3 (
        /*[in]*/ struct IBDASpecFilter * spectrumRequest,
        /*[in]*/ struct IRange * startRange,
        /*[in]*/ struct IRange * endRange,
        /*[out,retval]*/ SAFEARRAY * * pRetVal ) = 0;
      virtual HRESULT __stdcall ReadSpectrum_4 (
        /*[in]*/ long rowIndex,
        /*[in]*/ VARIANT_BOOL bMassUnits,
        /*[out,retval]*/ struct IBDASpecData * * pRetVal ) = 0;
      virtual HRESULT __stdcall ReadSpectrum_5 (
        /*[in]*/ long rowIndex,
        /*[in]*/ VARIANT_BOOL bMassUnits,
        /*[in]*/ enum DesiredMSStorageType desiredStorageMode,
        /*[out,retval]*/ struct IBDASpecData * * pRetVal ) = 0;
};

struct __declspec(uuid("205c54fb-9a05-472c-aa33-ae2f1ea7a144"))
BDAChromFilter;
    // interface _Object
    // [ default ] interface IBDAChromFilter
    // interface ICloneable

struct __declspec(uuid("ccffb440-7a12-4051-84b8-c1414c0097f2"))
BDAPeak;
    // interface _Object
    // [ default ] interface IBDAPeak

struct __declspec(uuid("979eaa6d-2183-4fab-bf47-8de418e4757f"))
BDAPeakSpecFilter;
    // interface _Object
    // [ default ] interface IBDAPeakSpecFilter

struct __declspec(uuid("6089c0d7-d281-4461-a86c-c3566a7f35ee"))
BDASpecFilter;
    // interface _Object
    // [ default ] interface IBDASpecFilter
    // interface ICloneable

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_BDA =
    {0x04135262,0x614e,0x4ba2,{0xb7,0x30,0xb5,0x8e,0x3a,0x7b,0x97,0xa0}};
extern "C" const GUID __declspec(selectany) IID_IBDAAcquisitionData =
    {0x266d6d89,0xc740,0x448c,{0xab,0xae,0x50,0x82,0xa6,0x3f,0x4a,0x72}};
extern "C" const GUID __declspec(selectany) CLSID_BDAAcquisitionData =
    {0xb309ac6a,0xc568,0x458a,{0xad,0xd9,0x0e,0xe3,0xec,0x19,0x1b,0xad}};
extern "C" const GUID __declspec(selectany) IID_IBDAActualData =
    {0xd82436b0,0x4914,0x40e5,{0xb4,0xb5,0x35,0x16,0x78,0xf0,0xf8,0x71}};
extern "C" const GUID __declspec(selectany) CLSID_BDAActualData =
    {0x95021e41,0x291b,0x4c09,{0xa2,0x12,0x44,0x73,0xaf,0xe0,0xfe,0xe3}};
extern "C" const GUID __declspec(selectany) CLSID_BDAFileInformation =
    {0x7172b2c2,0x02d5,0x46bc,{0xb6,0x36,0x27,0x8a,0xbd,0x3d,0xc2,0x1f}};
extern "C" const GUID __declspec(selectany) CLSID_BDAMSScanFileInformation =
    {0xd03ad9bf,0x051e,0x4a58,{0xa1,0xef,0x02,0x4a,0xbb,0xc9,0x65,0x04}};
extern "C" const GUID __declspec(selectany) CLSID_MSScanFileInformationIterator =
    {0xca256fad,0x4467,0x41e1,{0x81,0xcc,0x71,0x54,0x1f,0x42,0xec,0xcd}};
extern "C" const GUID __declspec(selectany) IID_IBDAMSScanTypeInformation =
    {0x09c0515b,0x9465,0x4340,{0xa2,0xe9,0xb7,0x4b,0x76,0x9a,0x98,0xe3}};
extern "C" const GUID __declspec(selectany) IID_IBDAMSScanFileInformation =
    {0x68e1a1e8,0x5ba9,0x4a79,{0x96,0x1a,0xfe,0xcc,0xcf,0xae,0x6a,0x1d}};
extern "C" const GUID __declspec(selectany) IID_IBDAFileInformation =
    {0x22857f71,0x9522,0x4475,{0xa2,0x22,0x65,0x84,0x2e,0x4e,0x50,0xe7}};
extern "C" const GUID __declspec(selectany) CLSID_BDAMSScanTypeInformation =
    {0xd733de2b,0x949e,0x4358,{0xad,0xd9,0x3a,0x69,0xd1,0x91,0xbd,0x7c}};
extern "C" const GUID __declspec(selectany) IID_IBDASampleData =
    {0x4e95dcfd,0x7da1,0x4558,{0x80,0x81,0x04,0x33,0x04,0x65,0x4c,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_BDASampleData =
    {0x1bafa631,0xcb79,0x4bc5,{0x96,0xd5,0x7b,0xd4,0x25,0xce,0x33,0x5f}};
extern "C" const GUID __declspec(selectany) IID_IBDAEvents =
    {0x26e46410,0xe7d3,0x4306,{0xa1,0x23,0x82,0xb4,0x9d,0xe3,0x47,0xd8}};
extern "C" const GUID __declspec(selectany) IID_IBDASample =
    {0xb5a3f889,0x9fec,0x417e,{0xa9,0x45,0x45,0x90,0x49,0x4a,0xc6,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IBDAActuals =
    {0x00a84f11,0x0427,0x4fdf,{0xa4,0xa7,0x80,0x97,0x09,0x25,0x0e,0x1f}};
extern "C" const GUID __declspec(selectany) IID_IBDAUserCalibration =
    {0x7b2bf740,0x2f30,0x4731,{0x85,0x72,0xa7,0xfd,0x63,0x76,0xb8,0x93}};
extern "C" const GUID __declspec(selectany) IID_IBDADataAccess =
    {0x0b423064,0x67fc,0x4906,{0xbd,0x0a,0x64,0xc5,0x2d,0x97,0xe0,0x4c}};
extern "C" const GUID __declspec(selectany) CLSID_BDADataAccess =
    {0xf9041229,0x01cc,0x47d8,{0x86,0xed,0x87,0xe7,0x3a,0x74,0xb3,0x05}};
extern "C" const GUID __declspec(selectany) IID_IBDAChromData =
    {0x23dea6d7,0xabe5,0x47c2,{0x8d,0x9c,0x17,0x0e,0xbb,0x57,0x96,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_BDAChromData =
    {0xf6d1b211,0x24fd,0x4cc5,{0xa1,0x81,0xfc,0xa2,0x10,0xa2,0x5a,0x7e}};
extern "C" const GUID __declspec(selectany) IID_IBDASpecData =
    {0x066f2ea6,0x8239,0x41b0,{0x9a,0x57,0x57,0x3a,0x5c,0x66,0x41,0x8f}};
extern "C" const GUID __declspec(selectany) CLSID_BDASpecData =
    {0x298250ba,0x0e9d,0x4424,{0xac,0xd6,0x28,0xca,0x54,0x28,0x0a,0x2c}};
extern "C" const GUID __declspec(selectany) IID_IBDAChromFilter =
    {0xfefe93f3,0xe3c4,0x49eb,{0x92,0xd7,0x58,0x56,0x29,0x99,0x5e,0x12}};
extern "C" const GUID __declspec(selectany) IID_IBDAReadChromatogram =
    {0x8b8558de,0xbbb0,0x40b0,{0xa9,0xd6,0xc3,0x31,0x44,0x56,0xf2,0x74}};
extern "C" const GUID __declspec(selectany) IID_IBDAPeak =
    {0x3ff555d8,0x92a1,0x4287,{0xb3,0x65,0x02,0x89,0x78,0x99,0xc1,0x78}};
extern "C" const GUID __declspec(selectany) IID_IBDAPeakSpecFilter =
    {0xc05a2780,0x0393,0x46c9,{0xbf,0x90,0xd2,0xd6,0x79,0xbf,0x1a,0x79}};
extern "C" const GUID __declspec(selectany) IID_IBDASpecFilter =
    {0x2bc66a59,0x6c80,0x44f5,{0xb9,0xb7,0xa5,0x26,0x5b,0x5f,0x82,0x38}};
extern "C" const GUID __declspec(selectany) IID_IBDAReadSpectra =
    {0x3a365594,0xa7b2,0x47bd,{0x89,0x1b,0xa3,0xed,0xb2,0x3c,0x00,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_BDAChromFilter =
    {0x205c54fb,0x9a05,0x472c,{0xaa,0x33,0xae,0x2f,0x1e,0xa7,0xa1,0x44}};
extern "C" const GUID __declspec(selectany) CLSID_BDAPeak =
    {0xccffb440,0x7a12,0x4051,{0x84,0xb8,0xc1,0x41,0x4c,0x00,0x97,0xf2}};
extern "C" const GUID __declspec(selectany) CLSID_BDAPeakSpecFilter =
    {0x979eaa6d,0x2183,0x4fab,{0xbf,0x47,0x8d,0xe4,0x18,0xe4,0x75,0x7f}};
extern "C" const GUID __declspec(selectany) CLSID_BDASpecFilter =
    {0x6089c0d7,0xd281,0x4461,{0xa8,0x6c,0xc3,0x56,0x6a,0x7f,0x35,0xee}};

} // namespace BDA

#pragma pack(pop)
