#
# $Id$
#
#
# Original author: Darren Kessner <darren@proteowizard.org>
#
# Copyright 2008 Spielberg Family Center for Applied Proteomics
#   Cedars-Sinai Medical Center, Los Angeles, California  90048
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
#


project
    : requirements 
        <toolset>msvc,<link>shared:<define>PWIZ_DYN_LINK
    ;


rule vendor-reader-libraries ( properties * )
{
    local libraries ;
    local core_vendor_reader_path = $(PWIZ_ROOT_PATH)/pwiz/data/vendor_readers ;
    local msrc_vendor_reader_path = $(PWIZ_ROOT_PATH)/pwiz_aux/msrc/data/vendor_readers ;
    if [ path.exists $(core_vendor_reader_path)/Thermo ] { libraries += <library>$(core_vendor_reader_path)/Thermo ; }
    if [ path.exists $(core_vendor_reader_path)/Agilent ] { libraries += <library>$(core_vendor_reader_path)/Agilent ; }
    if [ path.exists $(msrc_vendor_reader_path)/ABI ] { libraries += <library>$(msrc_vendor_reader_path)/ABI ; }
    if [ path.exists $(msrc_vendor_reader_path)/Bruker ] { libraries += <library>$(msrc_vendor_reader_path)/Bruker ; }
    if [ path.exists $(msrc_vendor_reader_path)/Waters ] { libraries += <library>$(msrc_vendor_reader_path)/Waters ; }
    return $(libraries) ;
}


lib pwiz_analysis_spectrum_processing
    : # sources  
        SpectrumListFactory.cpp
        SpectrumList_Sorter.cpp
        SpectrumList_Filter.cpp
        SpectrumList_PrecursorRecalculator.cpp
        SpectrumList_Smoother.cpp
        SpectrumList_PeakPicker.cpp
        SpectrumList_Thresholder.cpp
        SpectrumList_ChargeStateCalculator.cpp
        SpectrumList_MZWindow.cpp
        PrecursorRecalculatorDefault.cpp
    : # requirements
        <library>../../data/msdata//pwiz_data_msdata
        <library>../peakdetect//pwiz_analysis_peakdetect
        <library>../passive//pwiz_analysis_passive_core
        <library>../common//pwiz_analysis_common
        <conditional>@vendor-reader-libraries
    : # default-build
    : # usage-requirements
        <library>../../data/msdata//pwiz_data_msdata
        <library>../peakdetect//pwiz_analysis_peakdetect
        <library>../passive//pwiz_analysis_passive_core
        <library>../common//pwiz_analysis_common
        <conditional>@vendor-reader-libraries
    ;


#
# unit tests (ordered by dependency)
#


unit-test SpectrumList_SorterTest : SpectrumList_SorterTest.cpp pwiz_analysis_spectrum_processing ../../data/msdata//pwiz_data_msdata_examples ;
unit-test SpectrumList_FilterTest : SpectrumList_FilterTest.cpp pwiz_analysis_spectrum_processing ../../data/msdata//pwiz_data_msdata_examples ;
unit-test SpectrumList_ThresholderTest : SpectrumList_ThresholderTest.cpp pwiz_analysis_spectrum_processing ../../data/msdata//pwiz_data_msdata_examples ;
unit-test SpectrumList_ChargeStateCalculatorTest : SpectrumList_ChargeStateCalculatorTest.cpp pwiz_analysis_spectrum_processing ;
unit-test SpectrumListFactoryTest : SpectrumListFactoryTest.cpp pwiz_analysis_spectrum_processing ../../data/msdata//pwiz_data_msdata_examples ;
unit-test SpectrumList_MZWindowTest : SpectrumList_MZWindowTest.cpp pwiz_analysis_spectrum_processing ;


# Special run targets for tests with data files.
# We pass in single input file, to which bjam prepends the full path from current
# Jamfile directory.  The test program can then locate its data files.

run PrecursorRecalculatorDefaultTest.cpp pwiz_analysis_spectrum_processing 
    : # args
    : PrecursorRecalculatorDefaultTest.data/5peptide.b64 # input-files
    : # requirements
    : PrecursorRecalculatorDefaultTest # target name
    : # default-build
    ;

run SpectrumList_PrecursorRecalculatorTest.cpp pwiz_analysis_spectrum_processing 
    : # args
    : SpectrumList_PrecursorRecalculatorTest.data/5peptideFT.mzML # input-files
    : # requirements
    : SpectrumList_PrecursorRecalculatorTest # target name
    : # default-build
    ;

