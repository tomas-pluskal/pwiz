// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (621bdc2a).
//
// compassxtractms.tlh
//
// C++ source equivalent of Win32 type library CompassXtractMS.dll
// compiler-generated file created 12/31/08 at 14:23:07 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace EDAL {

//
// Forward references and typedefs
//

struct __declspec(uuid("8e79b9a2-107e-4e91-a0ff-01f2591103f3"))
/* LIBID */ __EDAL;
enum SpectrumTypes;
enum SpectrumPolarity;
enum FragmentationModes;
enum InstrumentFamily;
enum IsolationModes;
struct __declspec(uuid("f91ce7af-a338-467d-8e5f-9d1621254f6a"))
/* dual interface */ IMSSpectrumParameter;
struct __declspec(uuid("9cc1cd9a-98d0-45b7-b8df-ca019cebd314"))
/* dual interface */ IMSSpectrumParameterCollection;
struct __declspec(uuid("ac28c948-f617-4e6d-a31e-c1a7a4748c23"))
/* dual interface */ IMSSpectrum;
struct __declspec(uuid("c2da5f65-b1c7-4bb8-bfa9-4c422ddcd2f7"))
/* dual interface */ IMSSpectrumCollection;
struct __declspec(uuid("401aff6a-c542-4b50-8723-58c14bbabe06"))
/* dual interface */ IMSAnalysis;
struct __declspec(uuid("1c165d71-133b-4818-a7d3-2f25de9154dd"))
/* dual interface */ IMSSpectrumEnumerator;
struct __declspec(uuid("c98ee3dc-f8dd-4aff-afd2-1c8d29af208e"))
/* dual interface */ IMSSpectrumParameterEnumerator;
struct /* coclass */ MSAnalysis;
struct /* coclass */ MSSpectrumCollection;
struct /* coclass */ MSSpectrum;
struct /* coclass */ MSSpectrumEnumerator;
struct /* coclass */ MSSpectrumParameterEnumerator;
struct /* coclass */ MSSpectrumParameterCollection;
struct /* coclass */ MSSpectrumParameter;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IMSSpectrumParameter, __uuidof(IMSSpectrumParameter));
_COM_SMARTPTR_TYPEDEF(IMSSpectrumParameterCollection, __uuidof(IMSSpectrumParameterCollection));
_COM_SMARTPTR_TYPEDEF(IMSSpectrum, __uuidof(IMSSpectrum));
_COM_SMARTPTR_TYPEDEF(IMSSpectrumCollection, __uuidof(IMSSpectrumCollection));
_COM_SMARTPTR_TYPEDEF(IMSAnalysis, __uuidof(IMSAnalysis));
_COM_SMARTPTR_TYPEDEF(IMSSpectrumEnumerator, __uuidof(IMSSpectrumEnumerator));
_COM_SMARTPTR_TYPEDEF(IMSSpectrumParameterEnumerator, __uuidof(IMSSpectrumParameterEnumerator));

//
// Type library items
//

enum __declspec(uuid("930a2f8b-e82b-4c19-a9be-02333b01a572"))
SpectrumTypes
{
    SpectrumType_Line = 0,
    SpectrumType_Profile = 1
};

enum __declspec(uuid("4cb67ae3-49d4-4c0b-8c1d-61fe86e73a27"))
SpectrumPolarity
{
    IonPolarity_Positive = 0,
    IonPolarity_Negative = 1,
    IonPolarity_Unknown = 255
};

enum __declspec(uuid("af18d12c-9eb6-4a65-ad2e-c2ae0fe78631"))
FragmentationModes
{
    FragMode_Off = 0,
    FragMode_CID = 1,
    FragMode_ETD = 2,
    FragMode_CIDETD_CID = 3,
    FragMode_CIDETD_ETD = 4,
    FragMode_ISCID = 5,
    FragMode_ECD = 6,
    FragMode_IRMPD = 7,
    FragMode_PTR = 8,
    FragMode_Unknown = 255
};

enum __declspec(uuid("ff91943d-3e7f-450b-b5c6-58e22e66f1c7"))
InstrumentFamily
{
    InstrumentFamily_Trap = 0,
    InstrumentFamily_OTOF = 1,
    InstrumentFamily_OTOFQ = 2,
    InstrumentFamily_BioTOF = 3,
    InstrumentFamily_BioTOFQ = 4,
    InstrumentFamily_MaldiTOF = 5,
    InstrumentFamily_FTMS = 6,
    InstrumentFamily_Unknown = 255
};

enum __declspec(uuid("06710717-0499-4a95-890a-94fa21ed449d"))
IsolationModes
{
    IsolMode_Off = 0,
    IsolMode_On = 1,
    IsolMode_Unknown = 255
};

struct __declspec(uuid("f91ce7af-a338-467d-8e5f-9d1621254f6a"))
IMSSpectrumParameter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGroupName))
    _bstr_t GroupName;
    __declspec(property(get=GetParameterName))
    _bstr_t ParameterName;
    __declspec(property(get=GetParameterUnit))
    _bstr_t ParameterUnit;
    __declspec(property(get=GetParameterValue))
    _variant_t ParameterValue;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetGroupName ( );
    _bstr_t GetParameterName ( );
    _bstr_t GetParameterUnit ( );
    _variant_t GetParameterValue ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GroupName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParameterName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParameterUnit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParameterValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
};

struct __declspec(uuid("9cc1cd9a-98d0-45b7-b8df-ca019cebd314"))
IMSSpectrumParameterCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IMSSpectrumParameterPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    IMSSpectrumParameterPtr GetItem (
        const _variant_t & index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT index,
        /*[out,retval]*/ struct IMSSpectrumParameter * * pVal ) = 0;
};

struct __declspec(uuid("ac28c948-f617-4e6d-a31e-c1a7a4748c23"))
IMSSpectrum : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMSMSStage))
    long MSMSStage;
    __declspec(property(get=GetMSSpectrumParameterCollection))
    IMSSpectrumParameterCollectionPtr MSSpectrumParameterCollection;
    __declspec(property(get=GetRetentionTime))
    double RetentionTime;
    __declspec(property(get=GetPolarity))
    enum SpectrumPolarity Polarity;

    //
    // Wrapper methods for error-handling
    //

    long GetMassIntensityValues (
        enum SpectrumTypes spectrumType,
        VARIANT * pMasses,
        VARIANT * pIntensities );
    long GetMSMSStage ( );
    IMSSpectrumParameterCollectionPtr GetMSSpectrumParameterCollection ( );
    double GetRetentionTime ( );
    long GetIsolationData (
        VARIANT * pMasses,
        SAFEARRAY * * pIsolationModi );
    long GetFragmentationData (
        VARIANT * pMasses,
        SAFEARRAY * * pFragmentationModi );
    enum SpectrumPolarity GetPolarity ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetMassIntensityValues (
        /*[in]*/ enum SpectrumTypes spectrumType,
        /*[out]*/ VARIANT * pMasses,
        /*[out]*/ VARIANT * pIntensities,
        /*[out,retval]*/ long * ElemCount ) = 0;
      virtual HRESULT __stdcall get_MSMSStage (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_MSSpectrumParameterCollection (
        /*[out,retval]*/ struct IMSSpectrumParameterCollection * * pVal ) = 0;
      virtual HRESULT __stdcall get_RetentionTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall raw_GetIsolationData (
        /*[out]*/ VARIANT * pMasses,
        /*[out]*/ SAFEARRAY * * pIsolationModi,
        /*[out,retval]*/ long * pDataCount ) = 0;
      virtual HRESULT __stdcall raw_GetFragmentationData (
        /*[out]*/ VARIANT * pMasses,
        /*[out]*/ SAFEARRAY * * pFragmentationModi,
        /*[out,retval]*/ long * pDataCount ) = 0;
      virtual HRESULT __stdcall get_Polarity (
        /*[out,retval]*/ enum SpectrumPolarity * Polarity ) = 0;
};

struct __declspec(uuid("c2da5f65-b1c7-4bb8-bfa9-4c422ddcd2f7"))
IMSSpectrumCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IMSSpectrumPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    IMSSpectrumPtr GetItem (
        long index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index,
        /*[out,retval]*/ struct IMSSpectrum * * pVal ) = 0;
};

struct __declspec(uuid("401aff6a-c542-4b50-8723-58c14bbabe06"))
IMSAnalysis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMSSpectrumCollection))
    IMSSpectrumCollectionPtr MSSpectrumCollection;
    __declspec(property(get=GetOperatorName))
    _bstr_t OperatorName;
    __declspec(property(get=GetAnalysisName))
    _bstr_t AnalysisName;
    __declspec(property(get=GetAnalysisDateTime))
    DATE AnalysisDateTime;
    __declspec(property(get=GetAnalysisDateTimeIsoString))
    _bstr_t AnalysisDateTimeIsoString;
    __declspec(property(get=GetSampleName))
    _bstr_t SampleName;
    __declspec(property(get=GetMethodName))
    _bstr_t MethodName;
    __declspec(property(get=GetInstrumentFamily))
    enum InstrumentFamily _InstrumentFamily;
    __declspec(property(get=GetInstrumentDescription))
    _bstr_t InstrumentDescription;

    //
    // Wrapper methods for error-handling
    //

    IMSSpectrumCollectionPtr GetMSSpectrumCollection ( );
    HRESULT Open (
        _bstr_t DataFilePath );
    _bstr_t GetOperatorName ( );
    _bstr_t GetAnalysisName ( );
    DATE GetAnalysisDateTime ( );
    _bstr_t GetAnalysisDateTimeIsoString ( );
    _bstr_t GetSampleName ( );
    _bstr_t GetMethodName ( );
    enum InstrumentFamily GetInstrumentFamily ( );
    _bstr_t GetInstrumentDescription ( );
    HRESULT Refresh ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MSSpectrumCollection (
        /*[out,retval]*/ struct IMSSpectrumCollection * * pVal ) = 0;
      virtual HRESULT __stdcall raw_Open (
        /*[in]*/ BSTR DataFilePath ) = 0;
      virtual HRESULT __stdcall get_OperatorName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_AnalysisName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_AnalysisDateTime (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_AnalysisDateTimeIsoString (
        /*[out,retval]*/ BSTR * pDateString ) = 0;
      virtual HRESULT __stdcall get_SampleName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_MethodName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentFamily (
        /*[out,retval]*/ enum InstrumentFamily * pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentDescription (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall raw_Refresh ( ) = 0;
};

struct __declspec(uuid("1c165d71-133b-4818-a7d3-2f25de9154dd"))
IMSSpectrumEnumerator : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        unsigned long celt,
        VARIANT * regelt,
        unsigned long * pceltFetched );
    HRESULT Skip (
        unsigned long celt );
    HRESULT Reset ( );
    IEnumVARIANTPtr Clone ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ unsigned long celt,
        /*[out]*/ VARIANT * regelt,
        unsigned long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ unsigned long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out,retval]*/ struct IEnumVARIANT * * ppEnum ) = 0;
};

struct __declspec(uuid("c98ee3dc-f8dd-4aff-afd2-1c8d29af208e"))
IMSSpectrumParameterEnumerator : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        unsigned long celt,
        VARIANT * regelt,
        unsigned long * pceltFetched );
    HRESULT Skip (
        unsigned long celt );
    HRESULT Reset ( );
    IEnumVARIANTPtr Clone ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ unsigned long celt,
        /*[out]*/ VARIANT * regelt,
        unsigned long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ unsigned long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out,retval]*/ struct IEnumVARIANT * * ppEnum ) = 0;
};

struct __declspec(uuid("012a4beb-99ec-4a65-a4af-7d09a20b5034"))
MSAnalysis;
    // [ default ] interface IMSAnalysis

struct __declspec(uuid("f26de45c-b737-4aa1-a941-cb0c66ca8d6c"))
MSSpectrumCollection;
    // [ default ] interface IMSSpectrumCollection

struct __declspec(uuid("82958ec4-2746-44d9-9e1e-8c25b9036294"))
MSSpectrum;
    // [ default ] interface IMSSpectrum

struct __declspec(uuid("fcbdf20b-eb66-401e-a06d-cf8cde38676a"))
MSSpectrumEnumerator;
    // [ default ] interface IMSSpectrumEnumerator

struct __declspec(uuid("e68e5c68-e05b-4522-9560-4526756faff1"))
MSSpectrumParameterEnumerator;
    // [ default ] interface IMSSpectrumParameterEnumerator

struct __declspec(uuid("39913b26-a61d-472f-945f-932f24736ce5"))
MSSpectrumParameterCollection;
    // [ default ] interface IMSSpectrumParameterCollection

struct __declspec(uuid("510c30e5-c631-4dc6-9183-4115b59fd462"))
MSSpectrumParameter;
    // [ default ] interface IMSSpectrumParameter

//
// Wrapper method implementations
//

#include "compassxtractms.tli"

} // namespace EDAL

#pragma pack(pop)
