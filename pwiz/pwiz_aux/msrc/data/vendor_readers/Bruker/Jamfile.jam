
project
    : requirements 
        <toolset>gcc:<cxxflags>-fno-strict-aliasing
        <toolset>msvc,<link>shared:<define>PWIZ_DYN_LINK
    ;


path-constant READER_PATH : . ;
path-constant API_PATH : $(PWIZ_ROOT_PATH)/pwiz_aux/msrc/utility/vendor_api/Bruker ;
path-constant TEST_DATA_PATH : ./Reader_Bruker_Test.data ;


# decompress test data (on any platform)
SHELL "$(UNTAR_TEST_DATA_SCRIPT) $(READER_PATH) $(PWIZ_ROOT_PATH) $(TEST_DATA_PATH)" : no-output ;



lib pwiz_aux_msrc_reader_bruker
    : # sources
        Reader_Bruker.cpp
        Reader_Bruker_Detail.cpp
    : # requirements
        <toolset>msvc:<source>SpectrumList_Bruker.cpp
        <toolset>msvc:<source>ChromatogramList_Bruker.cpp
		<toolset>msvc:<define>PWIZ_READER_BRUKER
		<toolset>msvc:<library>$(API_PATH)//pwiz_vendor_api_bruker
		<library>$(PWIZ_ROOT_PATH)/pwiz/data/msdata//pwiz_data_msdata
    : # default-build
    : # usage-requirements
		<toolset>msvc:<define>PWIZ_READER_BRUKER
		<toolset>msvc:<library>$(API_PATH)//pwiz_vendor_api_bruker
		<library>$(PWIZ_ROOT_PATH)/pwiz/data/msdata//pwiz_data_msdata
    ;


#
# unit tests (ordered by dependency)
#

# special run target for Reader_Thermo_Test, which needs external data 
# use --preserve-test-targets to prevent bjam from deleting the executable
run Reader_Bruker_Test.cpp
    : # args
        \"$(TEST_DATA_PATH)\"
    : # input-files
    : # requirements
        <library>pwiz_aux_msrc_reader_bruker
    : # target name
        Reader_Bruker_Test 
    : # default-build
    ;


