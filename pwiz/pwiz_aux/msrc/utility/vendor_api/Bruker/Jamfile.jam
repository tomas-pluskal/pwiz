
import modules ;
import path ;


path-constant API_PATH : . ;


# don't bother defining this API for non-Windows platforms.
if [ modules.peek : NT ]
{

rule vendor-api-requirements ( properties * )
{
    local result ;
    if <toolset>msvc in $(properties)
    {
        result += <assembly>$(API_PATH)/Interop.EDAL.dll ;
        result += <assembly>$(API_PATH)/BDal.CXt.Lc.dll ;
        result += <assembly>$(API_PATH)/BDal.CXt.Lc.Factory.dll ;
        result += <assembly>$(API_PATH)/BDal.CXt.Lc.Interfaces.dll ;
        result += <assembly>$(API_PATH)/BDal.CXt.Lc.UntU2.dll ;
        result += <assembly-dependency>$(API_PATH)/CompassXtractMS.dll ;
        result += <assembly-dependency>$(API_PATH)/boost_regex-vc80-mt-1_33_1-BDAL_20070424.dll ;
        result += <assembly-dependency>$(API_PATH)/boost_thread-vc80-mt-1_33_1-BDAL_20070424.dll ;
        result += <assembly-dependency>$(API_PATH)/libfftw3-3.dll ;
        result += <assembly-dependency>$(API_PATH)/libfftw3f-3.dll ;
        result += <assembly-dependency>$(API_PATH)/NTB-vc80-mt-4_3_61.dll ;
        result += <manifest-dependency>$(API_PATH)/Interop.EDAL.dll ;
        result += <assembly-dependency>$(API_PATH)/Interop.EDAL.SxS.manifest ;
    }
    return $(result) ;
}

lib pwiz_vendor_api_bruker
    : # sources
        CompassData.cpp
    : # requirements

        # - when boost::thread is link=static, the exe header is tweaked to call
        #   thread-local storage initialization routines (before main())
        # - when a /clr object is link=static, the exe header is similarly tweaked
        #   to initialize the CLR
        # - these two tweaks are incompatible: either boost::thread must be link=shared,
        #   or the CLR object must be
        # HACK: not needed when using hacked tss_pe.cpp
        #<link>shared
        
        <toolset>msvc,<link>shared:<define>PWIZ_DYN_LINK
        <using-clr>true # requires hacked msvc.jam
        <conditional>@vendor-api-requirements
        <library>$(PWIZ_ROOT_PATH)/pwiz/utility/misc//pwiz_utility_misc
    : # default-build
    : # usage-requirements
        <conditional>@vendor-api-requirements
        <library>$(PWIZ_ROOT_PATH)/pwiz/utility/misc//pwiz_utility_misc
    ;


# a test utility, not a unit test
exe CompassDataTest
    : CompassDataTest.cpp
      pwiz_vendor_api_bruker
    ;

explicit CompassDataTest ;

}
