
import modules ;
import path ;

path-constant ABI_PATH : . ;
path-constant ABI_TEST_PATH : ./WiffFileTest.data ;

if [ modules.peek : NT ] &&
   [ path.exists $(ABI_PATH)/ABSciex.DataAccess.WiffFileDataReader.dll ]
{

lib pwiz_wifffile
    : # sources
        WiffFile.cpp
    : # requirements

        # - when boost::thread is link=static, the exe header is tweaked to call
        #   thread-local storage initialization routines (before main())
        # - when a /clr object is link=static, the exe header is similarly tweaked
        #   to initialize the CLR
        # - these two tweaks are incompatible: either boost::thread must be link=shared,
        #   or the CLR object must be
        # HACK: not needed when using hacked tss_pe.cpp
        #<link>shared
        
        <toolset>msvc,<link>shared:<define>WIFFFILE_DYN_LINK
        <using-clr>true # requires hacked msvc.jam
        <toolset>msvc:<assembly>$(ABI_PATH)/ABSciex.DataAccess.WiffFileDataReader.dll
        <toolset>msvc:<assembly>$(ABI_PATH)/Clearcore.dll
        <toolset>msvc:<assembly>$(ABI_PATH)/ClearCore.Storage.dll
        <toolset>msvc:<assembly-dependency>$(ABI_PATH)/rscoree.dll
    : # default-build
    : # usage-requirements
        <toolset>msvc:<assembly>$(ABI_PATH)/ABSciex.DataAccess.WiffFileDataReader.dll
        <toolset>msvc:<assembly>$(ABI_PATH)/Clearcore.dll
        <toolset>msvc:<assembly>$(ABI_PATH)/ClearCore.Storage.dll
        <toolset>msvc:<assembly-dependency>$(ABI_PATH)/rscoree.dll
    ;


# decompress test data
if [ modules.peek : NT ]
{
    SHELL "$(ABI_TEST_PATH)/untar_data.bat $(ABI_TEST_PATH) $(PWIZ_ROOT_PATH)" : no-output ;
}
else if [ modules.peek : UNIX ]
{
    SHELL "$(ABI_TEST_PATH)/untar_data.sh $(ABI_TEST_PATH) $(PWIZ_ROOT_PATH)" : no-output ;
}


#
# unit tests (ordered by dependency)
#

path-constant TEST_PATH1 : "$(ABI_TEST_PATH)/Enolase_repeats_AQv1.4.2.wiff" ;

# special run target for WiffFileTest, which needs external data 
# use --preserve-test-targets to prevent bjam from deleting the executable
run WiffFileTest.cpp
    : # args
        \"$(TEST_PATH1)\"
    : # input-files
    : # requirements
        <library>pwiz_wifffile
    : # target name
        WiffFileTest 
    : # default-build
    ;
explicit WiffFileTest ;

}
