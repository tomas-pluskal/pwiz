
import modules ;
import path ;


path-constant API_PATH : . ;


if [ modules.peek : NT ] &&
   [ path.exists $(API_PATH)/ABSciex.DataAccess.WiffFileDataReader.dll ]
{

lib pwiz_vendor_api_abi
    : # sources
        WiffFile.cpp
    : # requirements

        # - when boost::thread is link=static, the exe header is tweaked to call
        #   thread-local storage initialization routines (before main())
        # - when a /clr object is link=static, the exe header is similarly tweaked
        #   to initialize the CLR
        # - these two tweaks are incompatible: either boost::thread must be link=shared,
        #   or the CLR object must be
        # HACK: not needed when using hacked tss_pe.cpp
        #<link>shared

        <toolset>msvc,<link>shared:<define>PWIZ_DYN_LINK
        <using-clr>true # requires hacked msvc.jam
        <toolset>msvc:<assembly>$(API_PATH)/ABSciex.DataAccess.WiffFileDataReader.dll
        <toolset>msvc:<assembly>$(API_PATH)/Clearcore.dll
        <toolset>msvc:<assembly>$(API_PATH)/ClearCore.Storage.dll
        <toolset>msvc:<assembly-dependency>$(API_PATH)/rscoree.dll
        <library>$(PWIZ_ROOT_PATH)/pwiz/utility/misc//pwiz_utility_misc
    : # default-build
    : # usage-requirements
        <toolset>msvc:<assembly>$(API_PATH)/ABSciex.DataAccess.WiffFileDataReader.dll
        <toolset>msvc:<assembly>$(API_PATH)/Clearcore.dll
        <toolset>msvc:<assembly>$(API_PATH)/ClearCore.Storage.dll
        <toolset>msvc:<assembly-dependency>$(API_PATH)/rscoree.dll
        <library>$(PWIZ_ROOT_PATH)/pwiz/utility/misc//pwiz_utility_misc
    ;


# a test utility, not a unit test
exe WiffFileTest
    : WiffFileTest.cpp
      pwiz_vendor_api_abi
    ;

explicit WiffFileTest ;

}
