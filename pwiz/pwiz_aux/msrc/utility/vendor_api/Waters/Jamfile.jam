
import modules ;
import path ;

path-constant ROOT : . ;

if [ modules.peek : NT ]
{

import path ;
rule vendor-api-requirements ( properties * )
{
    local result ;
    if [ path.exists $(ROOT)/DACServer.dll ]
    {
      result += <dependency>DACServer.dll ;
      result += <dependency>genutil.dll ;
      result += <dependency>MetaGD32.dll ;
      result += <dependency>raw.dll ;
      result += <dependency>RawCsm.dll ;
      result += <dependency>SecuritySignature.dll ;
    }
    return $(result) ;
}

lib pwiz_vendor_api_waters
    : # sources
        RawData.cpp
    : # requirements
        <toolset>msvc
        <link>shared:<define>RAWDATA_DYN_LINK
        <library>/ext/boost//filesystem
        <library>$(PWIZ_ROOT_PATH)/pwiz/utility/misc//pwiz_utility_misc
        <conditional>@vendor-api-requirements
    : # default-build
    : # usage-requirements
        <library>/ext/boost//filesystem
        <library>$(PWIZ_ROOT_PATH)/pwiz/utility/misc//pwiz_utility_misc
        <conditional>@vendor-api-requirements
    ;


path-constant TEST_PATH1 : "c:/test/160109_Mix1_calcurve_070.raw" ;
path-constant TEST_PATH2 : "c:/test/010208_ecoli_003.raw" ;

# special run target for RawDataTest, which needs external data 
# use --preserve-test-targets to prevent bjam from deleting the executable
run RawDataTest.cpp
    : # args
        \"$(TEST_PATH1)\" \"$(TEST_PATH2)\" -v
    : # input-files
    : # requirements
        <library>pwiz_vendor_api_waters
    : # target name
        RawDataTest 
    : # default-build
    ;
explicit RawDataTest ;

}
