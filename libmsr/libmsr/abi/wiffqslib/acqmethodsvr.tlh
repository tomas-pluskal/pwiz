// Created by Microsoft (R) C/C++ Compiler Version 14.00.50727.762 (5a4863c9).
//
// f:\tmp\sashimi-trunk\trans_proteomic_pipeline\src\mzxml\converters\mzwiff\wiffqslib\acqmethodsvr.tlh
//
// C++ source equivalent of Win32 type library ..\\libs\\analystqs\\AcqMethodSvr.dll
// compiler-generated file created 07/24/07 at 22:35:44 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace AnalystQS {

//
// Forward references and typedefs
//

struct __declspec(uuid("315829e4-86b1-11d1-9d5a-006097223085"))
/* LIBID */ __AcqMethodSvrLib;
struct /* coclass */ AcqMethod;
struct __declspec(uuid("315829f1-86b1-11d1-9d5a-006097223085"))
/* dual interface */ IAcqMethod;
struct __declspec(uuid("fed3d0d2-6dd7-11d2-9d93-006097223085"))
/* interface */ IDAMethodInit;
struct tagDEVICEDESCRIPTOR;
struct __declspec(uuid("42a38bc1-1a8a-11d2-9d76-006097223085"))
/* interface */ IDAMConfig;
struct __declspec(uuid("42a38bc2-1a8a-11d2-9d76-006097223085"))
/* interface */ IDAMTransfer;
struct __declspec(uuid("d77ddf41-2580-11d2-9d78-006097223085"))
/* interface */ IEnumDeviceMethods;
struct __declspec(uuid("9a684ed0-b309-11d3-81c8-00c04f8cf853"))
/* interface */ IDAMOriginalConfig;
struct __declspec(uuid("3e9957e0-b617-11d2-9154-00805fd959a7"))
/* interface */ IDevMethodEvents;
struct /* coclass */ EnumDeviceMethods;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAcqMethod, __uuidof(IAcqMethod));
_COM_SMARTPTR_TYPEDEF(IDAMethodInit, __uuidof(IDAMethodInit));
_COM_SMARTPTR_TYPEDEF(IDAMConfig, __uuidof(IDAMConfig));
_COM_SMARTPTR_TYPEDEF(IDAMTransfer, __uuidof(IDAMTransfer));
_COM_SMARTPTR_TYPEDEF(IEnumDeviceMethods, __uuidof(IEnumDeviceMethods));
_COM_SMARTPTR_TYPEDEF(IDAMOriginalConfig, __uuidof(IDAMOriginalConfig));
_COM_SMARTPTR_TYPEDEF(IDevMethodEvents, __uuidof(IDevMethodEvents));

//
// Type library items
//

struct __declspec(uuid("0399ed50-66a5-11d1-9d51-006097223085"))
AcqMethod;
    // [ default ] interface IAcqMethod
    // interface IDAMethodInit
    // interface IDAMConfig
    // interface IDAMTransfer
    // interface IEnumDeviceMethods
    // interface IPersistStorage
    // interface IPersistWIFFStg
    // interface ISupportErrorInfo
    // interface IEnableTuneMode
    // interface IDAMOriginalConfig
    // interface IDevMethodEvents

struct __declspec(uuid("315829f1-86b1-11d1-9d5a-006097223085"))
IAcqMethod : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetAutoEquilibrate,put=PutAutoEquilibrate))
    long AutoEquilibrate;
    __declspec(property(get=GetAutoEquilibrationTime,put=PutAutoEquilibrationTime))
    double AutoEquilibrationTime;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetSyncMode,put=PutSyncMode))
    short SyncMode;

    //
    // Wrapper methods for error-handling
    //

    HRESULT SaveAcqMethodToFile (
        _bstr_t fileName,
        long bOverwrite );
    HRESULT LoadAcqMethodFromFile (
        _bstr_t fileName );
    double GetMethodDuration ( );
    IUnknownPtr Get_NewEnum ( );
    long IsAcqMethodValid ( );
    long GetAutoEquilibrate ( );
    void PutAutoEquilibrate (
        long pVal );
    double GetAutoEquilibrationTime ( );
    void PutAutoEquilibrationTime (
        double pVal );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t pVal );
    HRESULT LoadAcqMethodFromFileAsIs (
        _bstr_t fileName );
    short GetSyncMode ( );
    void PutSyncMode (
        short pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SaveAcqMethodToFile (
        /*[in]*/ BSTR fileName,
        /*[in]*/ long bOverwrite ) = 0;
      virtual HRESULT __stdcall raw_LoadAcqMethodFromFile (
        /*[in]*/ BSTR fileName ) = 0;
      virtual HRESULT __stdcall raw_GetMethodDuration (
        /*[out,retval]*/ double * pDuration ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppVal ) = 0;
      virtual HRESULT __stdcall raw_IsAcqMethodValid (
        /*[out,retval]*/ long * pValid ) = 0;
      virtual HRESULT __stdcall get_AutoEquilibrate (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_AutoEquilibrate (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_AutoEquilibrationTime (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_AutoEquilibrationTime (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall raw_LoadAcqMethodFromFileAsIs (
        /*[in]*/ BSTR fileName ) = 0;
      virtual HRESULT __stdcall get_SyncMode (
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_SyncMode (
        /*[in]*/ short pVal ) = 0;
};

#pragma pack(push, 4)

struct tagDEVICEDESCRIPTOR
{
    long type;
    long model;
    long idNum;
};

#pragma pack(pop)

struct __declspec(uuid("fed3d0d2-6dd7-11d2-9d93-006097223085"))
IDAMethodInit : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    long ReadOnly;

    //
    // Wrapper methods for error-handling
    //

    HRESULT InitTargetConfig (
        unsigned long ulSize,
        struct tagDEVICEDESCRIPTOR * aDeviceList );
    HRESULT InitNewAcqMethod ( );
    long ValidateAcqMethod ( );
    long GetReadOnly ( );
    void PutReadOnly (
        long pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_InitTargetConfig (
        /*[in]*/ unsigned long ulSize,
        /*[in]*/ struct tagDEVICEDESCRIPTOR * aDeviceList ) = 0;
      virtual HRESULT __stdcall raw_InitNewAcqMethod ( ) = 0;
      virtual HRESULT __stdcall raw_ValidateAcqMethod (
        /*[out,retval]*/ long * pValid ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("42a38bc1-1a8a-11d2-9d76-006097223085"))
IDAMConfig : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr AddDeviceMethod (
        long devType,
        long devModel,
        long devID );
    IUnknownPtr AddDeviceMethodQuickly (
        long devType,
        long devModel,
        long devID,
        _bstr_t devMethCLSID );
    HRESULT DeleteDeviceMethod (
        long devTypeID,
        long devModelID,
        long devID );
    IUnknownPtr GetDeviceMethod (
        long devTypeID,
        long devModelID,
        long devID );
    short GetDeviceMethodCount ( );
    HRESULT DeleteAllDeviceMethods ( );
    long Empty ( );
    HRESULT GetDeviceMethodByIdx (
        long idx,
        long * pType,
        long * pModel,
        long * pId,
        IUnknown * * ppUnk );
    HRESULT DeleteDeviceMethodByIdx (
        long idx );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_AddDeviceMethod (
        /*[in]*/ long devType,
        /*[in]*/ long devModel,
        /*[in]*/ long devID,
        /*[out,retval]*/ IUnknown * * ppUnkDevMeth ) = 0;
      virtual HRESULT __stdcall raw_AddDeviceMethodQuickly (
        /*[in]*/ long devType,
        /*[in]*/ long devModel,
        /*[in]*/ long devID,
        /*[in]*/ BSTR devMethCLSID,
        /*[out,retval]*/ IUnknown * * ppUnkDevMeth ) = 0;
      virtual HRESULT __stdcall raw_DeleteDeviceMethod (
        /*[in]*/ long devTypeID,
        /*[in]*/ long devModelID,
        /*[in]*/ long devID ) = 0;
      virtual HRESULT __stdcall raw_GetDeviceMethod (
        /*[in]*/ long devTypeID,
        /*[in]*/ long devModelID,
        /*[in]*/ long devID,
        /*[out,retval]*/ IUnknown * * ppUnkDevMethod ) = 0;
      virtual HRESULT __stdcall raw_GetDeviceMethodCount (
        /*[out,retval]*/ short * pDevCount ) = 0;
      virtual HRESULT __stdcall raw_DeleteAllDeviceMethods ( ) = 0;
      virtual HRESULT __stdcall raw_Empty (
        /*[out,retval]*/ long * pEmpty ) = 0;
      virtual HRESULT __stdcall raw_GetDeviceMethodByIdx (
        /*[in]*/ long idx,
        /*[out]*/ long * pType,
        /*[out]*/ long * pModel,
        /*[out]*/ long * pId,
        /*[out]*/ IUnknown * * ppUnk ) = 0;
      virtual HRESULT __stdcall raw_DeleteDeviceMethodByIdx (
        /*[in]*/ long idx ) = 0;
};

struct __declspec(uuid("42a38bc2-1a8a-11d2-9d76-006097223085"))
IDAMTransfer : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT TransferFromFileToStorage (
        _bstr_t fileName,
        struct IStorage * pStg );
    HRESULT LoadFromStorage (
        struct IStorage * pStg );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_TransferFromFileToStorage (
        /*[in]*/ BSTR fileName,
        /*[in]*/ struct IStorage * pStg ) = 0;
      virtual HRESULT __stdcall raw_LoadFromStorage (
        /*[in]*/ struct IStorage * pStg ) = 0;
};

struct __declspec(uuid("d77ddf41-2580-11d2-9d78-006097223085"))
IEnumDeviceMethods : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        IUnknown * * ppUnkDevMeth,
        long * pType,
        long * pModel,
        long * pInst );
    HRESULT Skip (
        unsigned long cDevMeth );
    HRESULT Reset ( );
    IEnumDeviceMethodsPtr Clone ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[out]*/ IUnknown * * ppUnkDevMeth,
        /*[out]*/ long * pType,
        /*[out]*/ long * pModel,
        /*[out]*/ long * pInst ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ unsigned long cDevMeth ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out,retval]*/ struct IEnumDeviceMethods * * ppenum ) = 0;
};

struct __declspec(uuid("9a684ed0-b309-11d3-81c8-00c04f8cf853"))
IDAMOriginalConfig : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT UpdateConfig ( );
    HRESULT GetNextDevice (
        long * devType,
        long * devModel,
        long * devID,
        BSTR * devName );
    HRESULT ResetDeviceList ( );
    HRESULT GetInstrumentSignature (
        BSTR * pSignature );
    HRESULT GetIonSource (
        BSTR * ionSourceName,
        int * ionSource );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_UpdateConfig ( ) = 0;
      virtual HRESULT __stdcall raw_GetNextDevice (
        /*[out]*/ long * devType,
        /*[out]*/ long * devModel,
        /*[out]*/ long * devID,
        /*[out]*/ BSTR * devName ) = 0;
      virtual HRESULT __stdcall raw_ResetDeviceList ( ) = 0;
      virtual HRESULT __stdcall raw_GetInstrumentSignature (
        /*[out]*/ BSTR * pSignature ) = 0;
      virtual HRESULT __stdcall raw_GetIonSource (
        /*[out]*/ BSTR * ionSourceName,
        /*[out]*/ int * ionSource ) = 0;
};

struct __declspec(uuid("3e9957e0-b617-11d2-9154-00805fd959a7"))
IDevMethodEvents : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT OnSyncModeChanged (
        short sSyncMode );
    HRESULT OnMSDurationChanged (
        double dDuration );
    HRESULT OnUseChanged (
        long bUse,
        long devType,
        long devModel,
        long devID );
    HRESULT OnAddRemoveChanged (
        long bAdd,
        long devType,
        long devModel,
        long devID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_OnSyncModeChanged (
        /*[in]*/ short sSyncMode ) = 0;
      virtual HRESULT __stdcall raw_OnMSDurationChanged (
        /*[in]*/ double dDuration ) = 0;
      virtual HRESULT __stdcall raw_OnUseChanged (
        /*[in]*/ long bUse,
        /*[in]*/ long devType,
        /*[in]*/ long devModel,
        /*[in]*/ long devID ) = 0;
      virtual HRESULT __stdcall raw_OnAddRemoveChanged (
        /*[in]*/ long bAdd,
        /*[in]*/ long devType,
        /*[in]*/ long devModel,
        /*[in]*/ long devID ) = 0;
};

struct __declspec(uuid("60297ad5-2b98-11d2-9d78-006097223085"))
EnumDeviceMethods;
    // [ default ] interface IEnumDeviceMethods

//
// Wrapper method implementations
//

#include "wiffqslib\acqmethodsvr.tli"

} // namespace AnalystQS

#pragma pack(pop)
